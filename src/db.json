{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/github-actions-sample-eslint-in-pull-request.md","hash":"d8d26a081af1360062c354f884a2c6de84872710","modified":1704273216691},{"_id":"source/_posts/react-zustand.md","hash":"346576eb884e3157eb3e630225a314d9f0cd36fe","modified":1704273216695},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1704270132837},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1704270133201},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1704270133209},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1704270133205},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1704270133205},{"_id":"public/github-actions-sample-eslint-in-pull-request/index.html","hash":"c127049c6f7716fd05343ec91d13791ececa161a","modified":1704273217808},{"_id":"public/react-zustand/index.html","hash":"0865fe2a8dcebbe8380ac5894b63ce618a7ce525","modified":1704273217808},{"_id":"public/archives/index.html","hash":"a3e5ef891425cf7f9a74cc481391db0cef6df832","modified":1704273217808},{"_id":"public/archives/2023/index.html","hash":"af6009a0e1abd053eca5b1825440974d94e3c0dc","modified":1704273217808},{"_id":"public/archives/2023/12/index.html","hash":"4942d8918efe645a56c8a18d35ac700a090708ad","modified":1704273217808},{"_id":"public/categories/工程化/index.html","hash":"9b6fc65ca27999579f2879a6e2d6781bd182f126","modified":1704273217808},{"_id":"public/categories/React/index.html","hash":"7bbde442712865bf309ed38411f8c4d8a3059329","modified":1704273217808},{"_id":"public/index.html","hash":"9bd1ab1740439ca15fa6443dc054be964fb00166","modified":1704273217808},{"_id":"public/tags/github-actions/index.html","hash":"6d466024facde7a014b9a68f733dc9b10bb3e1e0","modified":1704273217808},{"_id":"public/tags/zustand/index.html","hash":"4f999b262ec480f48c4129a3d6281685629f0cdf","modified":1704273217808},{"_id":"public/tags/react-store/index.html","hash":"46b2eb630e9d320ef78f339d44623736ac8cc72b","modified":1704273217808},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1704273217808},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1704273217808},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1704273217808},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1704273217808},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1704273217808},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1704273217808}],"Category":[{"name":"工程化","_id":"clqxk9r670003joorffjb03fe"},{"name":"React","_id":"clqxk9r680005joor13xp87sb"}],"Data":[],"Page":[],"Post":[{"title":"7. GitHub Actions - 在pull request中执行eslint检测的工作流例子","date":"2023-12-28T19:56:49.000Z","url":"github-actions-sample-eslint-in-pull-request","_content":"\n\n原文链接：[https://github.com/taoliujun/blog/issues/36](https://github.com/taoliujun/blog/issues/36)\n\n<!--hexo\n---\nurl: github-actions-sample-eslint-in-pull-request\ntags:\n  - github actions\n---\n-->\n\n一个在pull request发起的时候执行eslint检测的workflow，[点此查看完整代码](https://github.com/taoliujun/npm-packages/blob/master/.github/workflows/check-pull-request.yml)，它实现的功能如下：\n\n- 在pull request创建、更新的时候执行。\n- 先回复一个评论，告诉用户正在运行。\n- 初始化仓库，并安装依赖，产生依赖缓存。\n- 运行eslint增量检查。\n- 运行typescript检查。\n- 运行jest检查。\n- 更新之前的评论，回复检查的结果。\n\n运行截图：\n\n![Alt text](https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e)\n\n为避免歧义，涉及到github action的术语都是英文的。术语介绍如下：\n\n* workflow，工作流，可以理解为yml文件。\n* jobs，工作，一个workflow可以包含多个job，并行执行。\n* steps，作业，一个job可以包含多个step，串行执行。\n* action，操作，作业中具体的执行。\n\n## 步骤\n\n- [初始化workflow](https://github.com/taoliujun/blog/issues/36#issuecomment-1871790603)\n- [reply checking](https://github.com/taoliujun/blog/issues/36#issuecomment-1871806576)\n- [./.github/actions/unique-comment](https://github.com/taoliujun/blog/issues/36#issuecomment-1871818126)\n- [init](https://github.com/taoliujun/blog/issues/36#issuecomment-1871862632)\n- [eslint](https://github.com/taoliujun/blog/issues/36#issuecomment-1871862779)\n- [typescript](https://github.com/taoliujun/blog/issues/36#issuecomment-1871862850)\n- [unit test](https://github.com/taoliujun/blog/issues/36#issuecomment-1871863037)\n- [reply result](https://github.com/taoliujun/blog/issues/36#issuecomment-1871863117)\n\n<!--hexo-->\n\n# 初始化workflow\n\n在项目中新建文件`.github/workflows/check-pull-request.yml`，内容如下：\n\n```yaml\nname: test check pull request\nrun-name: 'check pull request #${{ github.event.pull_request.number }}'\non:\n    pull_request:\n        types: [opened, synchronize, reopened]\njobs:\n    replyChecking:\n        runs-on: ubuntu-latest\n        steps:\n            - run: echo 'replyChecking'\n\n    init:\n        runs-on: ubuntu-latest\n        steps:\n            - run: echo 'init'\n\n    eslint:\n        runs-on: ubuntu-latest\n        needs: [init]\n        steps:\n            - run: echo 'eslint'\n\n    typescript:\n        runs-on: ubuntu-latest\n        needs: [init]\n        steps:\n            - run: echo 'typescript'\n\n    unitTest:\n        runs-on: ubuntu-latest\n        needs: [init]\n        steps:\n            - run: echo 'unitTest'\n\n    replyResult:\n        runs-on: ubuntu-latest\n        needs: [replyChecking, eslint, typescript, unitTest]\n        steps:\n            - run: echo 'replyResult'\n```\n\n## name和run-name\n\n给workflow命名为`check pull request`，它会出现在Actions页面的左侧菜单中。运行实例名为`check pull request #44`，出现在右侧的运行列表中。如图：\n\n![](https://github.com/taoliujun/blog/assets/5689134/c1371ff2-8fc3-4e5b-8b60-3c572419938b)\n\n`run-name`中的`${{ github.event.pull_request.number }}`是workflow的上下文，这里读取了上下文中的pr编号。\n\n## on\n\n`on`指定了workflow的触发条件，这里配置了在pr创建、同步、重新打开的时候，触发该workflow。\n\n## jobs\n\n按照设想，需要定义几个job，分别是：\n\n-   replyChecking：回复用户正在检查中\n-   init：初始化仓库，缓存依赖项\n-   eslint：运行eslint检查\n-   typescript：运行typescript检查\n-   unitTest：运行单元测试\n-   replyResult：回复用户检查结果\n\n`jobs`是并行运行的，聪明如你肯定发现了，eslint、typescript、unitTest这三个job会涉及到安装npm依赖，所以它们最好在init后执行，确保依赖已经缓存了。\n\n其次，replyResult肯定要拿到eslint等job的结果才能执行，所以使用了`needs`管理它们的执行依赖关系。\n\n### runs-on\n\n每个job都运行在独立的容器中，github官方提供了windows、macos、linux多种容器，这里使用了ubuntu容器。\n\n## 测试\n\n发起一个pr，看到Actions页面出现了新的运行实例，点击进去，可以看到各个job的运行情况和依赖关系：\n\n![](https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e)\n\n<!--hexo-->\n\n# replyChecking\n\n在进行eslint检测之前，先在pr里回复`checking`，并且带上拽酷炫的话。将replyChecking改成如下：\n\n```yaml\nreplyChecking:\n    runs-on: ubuntu-latest\n    steps:\n        - name: Checkout\n          uses: actions/checkout@v4\n          with:\n              ref: ${{github.head_ref}}\n        - name: Get date time\n          id: getDateTime\n          run: echo \"result=$(TZ=Asia/Shanghai date)\" >> \"$GITHUB_OUTPUT\"\n        - name: Create or update a comment\n          uses: ./.github/actions/unique-comment\n          with:\n              uniqueIdentifier: ${{ github.workflow }}\n              body: |\n                  **Checking...**\n\n                  ---\n\n                  Commented by Action [${{github.workflow}}](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}), last updated on ${{steps.getDateTime.outputs.result}}.\n```\n\n`steps`每一步里`name`、`id`是可选的，`name`在Actions详情页面里会显示，更直观的看到step的名称，推荐写上。\n\n## Checkout\n\n`uses`表示使用一个action，名为`actions/checkout@v4`，它用来拉取仓库。\n\n> 同其他编程语言一样，重复的action可以封装起来。[action市场](https://github.com/marketplace?type=actions)提供了很多。\n\n`with`属性指定了该action的输入参数，每个action的参数不尽相同。\n\n`ref`参数表示要拉取的分支，`${{github.head_ref}}`也是一个上下文，表示当前pr的源分支。\n\n\n## Get Date time\n\n这step还写了`id`，表示该step在该job中的唯一标识，为什么要写呢？是为了下一步step能根据`id`读取到它的`output`。\n\n> **output**是workflow中非常重要的概念，它用于在step之间、job之间分享简单的数据。\n\n`run`就是在容器中跑一个命令，这里跑了一个unix bash命令，将当前时间写入到`$GITHUB_OUTPUT`中，键名为`result`。\n\n> `$GITHUB_OUTPUT`是workflow注入到容器中的一个路径，用于存放output。\n\n## Create or update a comment\n\n`uses`使用了本地的action，这个action用于创建或更新一个唯一回复，下一节说。\n\n> 有时候，官方或市场的action并不能满足你的需要，就得自己写一个了。\n\n同理，该action也有`with`属性，`uniqueIdentifier`是回复评论的唯一标识，`body`是回复的内容，内容使用了markdown语法，里面还涉及到上下文不一一细讲了。只说`${{steps.getDateTime.outputs.result}}`这个上下文表示获取getDateTime这个step中，键名为`result`的值。\n\n如果你不需要在内容里插入时间，那么上面的`Get Date time`就可以省略了。\n\n## 测试\n\n因为我已经有完整的代码了，所以运行后，pr中会有一个回复，如图：\n\n![](https://github.com/taoliujun/blog/assets/5689134/42396a84-b798-4f4e-9f39-5bf92a8acb15)\n<!--hexo-->\n\n# ./.github/actions/unique-comment\n\n这是一个封装的javascript action，用于对issue创建、更新唯一评论。\n\n## 目录结构\n\n创建目录`./.github/actions/unique-comment`，最终目录结构如下：\n\n```bash\n.\n├── action.yml\n├── config\n│   └── webpack.config.js\n├── dist\n│   ├── index.js\n│   └── index.js.LICENSE.txt\n├── package.json\n└── src\n    └── index.js\n```\n\n## action.yml\n\n这是action的配置文件，必须存在，内容如下：\n\n```yaml\nname: unique-comment\ndescription: create or update a unique comment\n\nruns:\n    using: 'node20'\n    main: './dist/index.js'\n\ninputs:\n    token:\n        description: 'GitHub token'\n        required: false\n        default: ${{ github.token }}\n    owner:\n        description: 'Repository owner'\n        required: false\n        default: ${{ github.event.repository.owner.login }}\n    repo:\n        description: 'Repository name'\n        required: false\n        default: ${{ github.event.repository.name }}\n    issue_number:\n        description: 'Issue number'\n        required: false\n        default: ${{ github.event.number }}\n    body:\n        description: 'Comment body'\n        required: false\n    uniqueIdentifier:\n        description: 'Unique identifier for comment'\n        required: false\n        default: 'unique-comment'\n```\n\n大部分属性不一一细讲了，都是简单的英文望文生义即可。\n\n`runs`表示运行在`node20`环境下，入口文件为`./dist/index.js`。\n\n`inputs`表示接受的参数，也就是之前提到的`with`属性里要输入的参数。用`required`表示是否必须传入，`default`表示默认值。\n\n## src/index.js\n\n为什么入口文件是`dist/index.js`，而不是`src/index.js`呢？因为要引用一些github官方提供的快捷操作github REST API的js包去操作issue评论(pull request也是一种issue)，最终打包后的文件才能在工作流中稳妥的运行。所以，写好`src/index.js`，再打包就行。\n\n该文件代码如下：\n\n```javascript\nconst core = require('@actions/core');\nconst github = require('@actions/github');\n\nconst main = async () => {\n    const token = core.getInput('token');\n    const owner = core.getInput('owner');\n    const repo = core.getInput('repo');\n    const issueNumber = core.getInput('issue_number');\n    const uniqueIdentifier = `[^uniqueIdentifier]: ${core.getInput('uniqueIdentifier')}`;\n    const body = `${core.getInput('body')}\\n\\n${uniqueIdentifier}`;\n\n    core.debug(`uniqueIdentifier is ${uniqueIdentifier}`);\n\n    const octokit = github.getOctokit(token);\n\n    const comments = await octokit.rest.issues.listComments({\n        owner,\n        repo,\n        issue_number: issueNumber,\n    });\n\n    const botComment = comments.data.find((v) => v.body.includes(uniqueIdentifier));\n\n    if (botComment) {\n        core.info('update comment successfully.');\n        await octokit.rest.issues.updateComment({\n            owner,\n            repo,\n            comment_id: botComment.id,\n            body,\n        });\n    } else {\n        core.info('create comment successfully.');\n        await octokit.rest.issues.createComment({\n            owner,\n            repo,\n            issue_number: issueNumber,\n            body,\n        });\n    }\n};\n\ntry {\n    main();\n} catch (err) {\n    core.setFailed(err.message);\n}\n```\n\n`@actions/core`和`@actions/github`是github官方提供的js包，前者可以方便的读取入参等，后者可以方便的操作github REST API。\n\n`main`函数的代码就是原生javascript，不一一解释了，主要通过`uniqueIdentifier`来判断是否发布过评论，如果是，就更新评论，否则就创建评论。\n\n> markdown语法`[^uniqueIdentifier]`表示脚注，不会被渲染。\n\n`core.setFailed(err.message);`表示抛出退出代码。\n\n## config/webpack.config.js\n\n打包用的，配置简单可用即可：\n\n```javascript\nmodule.exports = {\n    mode: 'production',\n    target: 'node20',\n    entry: './src/index.js',\n    output: {\n        filename: 'index.js',\n        clean: true,\n    },\n};\n```\n\n## package.json\n\n```json\n{\n  \"name\": \"unique-comment\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"webpack --config ./config/webpack.config.js\"\n  },\n  \"dependencies\": {\n    \"@actions/core\": \"^1.10.1\",\n    \"@actions/github\": \"^6.0.0\"\n  },\n  \"devDependencies\": {\n    \"webpack\": \"^5.89.0\",\n    \"webpack-cli\": \"^5.1.4\"\n  }\n}\n```\n\n没啥好说的，列出了依赖项。和一个打包脚本。\n\n## 测试\n\n修改了`src/index.js`得`build`，然后push到github仓库。\n\n记得将**dist**目录也提交到github仓库。\n\n<!--hexo-->\n\n# init\n\n现在，开始搞正经的了。\n\n先初始化项目，这个job的目的仅仅是为了缓存pnpm依赖项，如果你的项目的依赖项不经常更新，可以省略这个job，后续也不要`needs`这个job。\n\n将init改成如下：\n\n```yaml\ninit:\n        runs-on: ubuntu-latest\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: pnpm install\n```\n\n相信经过对之前的job的了解，这里的配置就看起来很简单了。\n\n## Init pnpm\n\n使用第三方action，安装pnpm@^8。\n\n## Init node\n\n`cache: 'pnpm'`指定缓存机制，它内部是利用了workflow的cache机制。\n\n## Install dependencies\n\n安装依赖项，触发缓存。\n<!--hexo-->\n\n# eslint\n\n将eslint改成如下：\n\n```yaml\neslint:\n        runs-on: ubuntu-latest\n        needs: [init]\n        outputs:\n            result: ${{ steps.lint.outputs.result }}\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n                  fetch-depth: 0\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: pnpm install\n\n            - name: Run eslint\n              id: lint\n              uses: actions/github-script@v7\n              with:\n                  result-encoding: string\n                  script: |\n                      let output = '';\n                      let outerr = '';\n                      let diffFiles = '';\n\n                      await exec.exec(\n                        `git diff --name-only origin/${{github.base_ref}}`,\n                        [],\n                        {\n                          // silent: true,\n                          // ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                diffFiles += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      const lintFiles = diffFiles.split(`\\n`).filter((file) => {\n                        return file.endsWith('.js') || file.endsWith('.ts') || file.endsWith('.tsx')\n                      }).join(' ');\n\n                      await exec.exec(\n                        // \"pnpm run lint --format stylish\",\n                        `pnpm eslint ${lintFiles}`,\n                        [],\n                        {\n                          // silent: true,\n                          ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                output += data.toString();\n                            },\n                            stderr: (data) => {\n                                outerr += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      if (outerr) {\n                        return `:x: Some command execution errors, non-eslint business errors.`;\n                      }\n\n                      const errorMatch = output.match(/(\\d+) errors?/);\n                      const warnMatch = output.match(/(\\d+) warnings?/);\n\n                      if (errorMatch && errorMatch?.[1] !== '0') {\n                        return `:x: ${errorMatch?.[0]} ${warnMatch?.[0]}`;\n                      }\n\n                      return `:white_check_mark: ${errorMatch?.[0] || '0 error'} ${warnMatch?.[0] || '0 warning'}`;\n```\n\n## needs\n\n使用`needs`依赖init，可以使用到pnpm的缓存项，防止install太慢。\n\n> 因为eslint、typescript、unitTest都需要pnpm install，所以一个前置的init去缓存pnpm依赖项，可以加快后续的install速度。\n\n## outputs\n\njob里的outputs，可以在依赖它的其他job中访问到。这里使用`${{ steps.lint.outputs.result }}`去获取该job中lint这个step里的output里的result。\n\n> output有job和step两个维度，注意区分。\n\n\n## Run eslint\n\n它uses了`actions/github-script@v7`，这是github官方提供的一个action，可以在`with.script`里写js代码去执行，同时它会注入一些变量到script中去，见它的[官方文档](https://github.com/actions/github-script/tree/v7/)。\n\n> 对于简单的js代码，可以使用这个action去完成，不用再去写一个js文件。\n\n`result-encoding`是指定script返回的数据格式的，默认是json，这指定为string。\n\n> 为什么script里return了string，还要指定为string呢？\n> 因为`return 'hello'`在json encode后是`'\"hello\"'`，而string encode后为`'hello'`。\n\nscript里是原生的js代码了，里面的`exec`是该action注入的变量，用来执行shell命令。\n\n这段js代码做了两个事情，一是`git diff`获取pr中改动的文件列表，二是`eslint`检查这些增量文件，最后返回处理的结果。\n\n## fetch-depth\n\nInit repo这个step里设置了`fetch-depth: 0`，不然获取不到完整的git分支，具体看`actions/checkout`的解释，涉及到git的知识不展开细说了。\n\n## steps.lint.outputs.result\n\n`steps.lint.outputs.result`为什么能拿到lint step里的output.result呢？因为`actions/github-script`这个action内部将script的返回值，设置到`$GITHUB_OUTPUT`里了，且键名为`result`。\n<!--hexo-->\n\n# typescript\n\n和eslint的配置大同小异，只是改了对检测结果的判断。\n\n```yaml\ntypescript:\n        runs-on: ubuntu-latest\n        needs: [init]\n        outputs:\n            result: ${{ steps.lint.outputs.result }}\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: pnpm install\n\n            - name: Run lint\n              id: lint\n              uses: actions/github-script@v7\n              with:\n                  result-encoding: string\n                  script: |\n                      let output = '';\n                      let outerr = '';\n\n                      await exec.exec(\n                        `pnpm run -r lint:ts`,\n                        [],\n                        {\n                          // silent: true,\n                          ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                output += data.toString();\n                            },\n                            stderr: (data) => {\n                                outerr += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      if (outerr) {\n                        return `:x: Some command execution errors, no business errors.`;\n                      }\n\n                      const errorMatch = output.match(/error TS/g);\n\n                      if (errorMatch) {\n                        return `:x: ${errorMatch?.length} errors`;\n                      }\n\n                      return `:white_check_mark: ${'0 error'}`;\n```\n<!--hexo-->\n\n# unitTest\n\n和eslint的配置大同小异，只是改了对检测结果的判断。唯一的区别是jest的检测结果是输出到stderr，见https://github.com/jestjs/jest/issues/5064。\n\n```yaml\nunitTest:\n        runs-on: ubuntu-latest\n        needs: [init]\n        outputs:\n            result: ${{ steps.lint.outputs.result }}\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: |\n                  pnpm remove @nike/eslint-multi-formatter || true\n                  pnpm remove @nike/svg-packer || true\n                  pnpm install\n\n            - name: Run lint\n              id: lint\n              uses: actions/github-script@v7\n              with:\n                  result-encoding: string\n                  script: |\n                      let output = '';\n                      let outerr = '';\n\n                      await exec.exec(\n                        `pnpm run test`,\n                        [],\n                        {\n                          // silent: true,\n                          ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                output += data.toString();\n                            },\n                            stderr: (data) => {\n                                outerr += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      // why use outerr? https://github.com/jestjs/jest/issues/5064\n\n                      const failMatch = outerr.match(/Test Suites: \\d+ failed/);\n\n                      if (failMatch) {\n                        return `:x: ${failMatch?.[0]}`;\n                      }\n\n                      const errorMatch = outerr.match(/Jest: \"global\" coverage threshold for lines \\([0-9\\.]+%\\) not met: [0-9\\.]+%/);\n\n                      if (errorMatch) {\n                        return `:x: ${errorMatch?.[0]}`;\n                      }\n\n                      return `:white_check_mark: passed`;\n```\n<!--hexo-->\n\n# replyResult\n\n最后，将几个检测的结果进行汇总，回复到pr里就行了。\n\n```yaml\nreplyResult:\n        runs-on: ubuntu-latest\n        needs: [replyChecking, eslint, typescript, unitTest]\n        steps:\n            - name: Checkout\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n            - name: Get date time\n              id: getDateTime\n              run: echo \"result=$(TZ=Asia/Shanghai date)\" >> \"$GITHUB_OUTPUT\"\n            - name: Create or update a comment\n              uses: ./.github/actions/unique-comment\n              with:\n                  uniqueIdentifier: ${{ github.workflow }}\n                  body: |\n                      ## Eslint Check Result\n\n                      ${{needs.eslint.outputs.result}}\n\n                      ## Typescript Check Result\n\n                      ${{needs.typescript.outputs.result}}\n\n                      ## UnitTest Check Result\n\n                      ${{needs.unitTest.outputs.result}}\n\n                      ---\n\n                      Commented by Action [${{github.workflow}}](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}), last updated on ${{steps.getDateTime.outputs.result}}.\n```\n\n和replyChecking差不多，在body里使用`${{needs.eslint.outputs.result}}`去读取了eslint job的outputs。\n\n## 测试\n\n去发起新的pr，故意提交一个有eslint error的js/ts文件，看看表现吧~\n\n","source":"_posts/github-actions-sample-eslint-in-pull-request.md","raw":"---\ntitle: \"7. GitHub Actions - 在pull request中执行eslint检测的工作流例子\"\ndate: \"2023-12-29T03:56:49Z\"\ncategories:\n  - [工程化]\n\nurl: github-actions-sample-eslint-in-pull-request\ntags:\n  - github actions\n\n---\n\n\n原文链接：[https://github.com/taoliujun/blog/issues/36](https://github.com/taoliujun/blog/issues/36)\n\n<!--hexo\n---\nurl: github-actions-sample-eslint-in-pull-request\ntags:\n  - github actions\n---\n-->\n\n一个在pull request发起的时候执行eslint检测的workflow，[点此查看完整代码](https://github.com/taoliujun/npm-packages/blob/master/.github/workflows/check-pull-request.yml)，它实现的功能如下：\n\n- 在pull request创建、更新的时候执行。\n- 先回复一个评论，告诉用户正在运行。\n- 初始化仓库，并安装依赖，产生依赖缓存。\n- 运行eslint增量检查。\n- 运行typescript检查。\n- 运行jest检查。\n- 更新之前的评论，回复检查的结果。\n\n运行截图：\n\n![Alt text](https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e)\n\n为避免歧义，涉及到github action的术语都是英文的。术语介绍如下：\n\n* workflow，工作流，可以理解为yml文件。\n* jobs，工作，一个workflow可以包含多个job，并行执行。\n* steps，作业，一个job可以包含多个step，串行执行。\n* action，操作，作业中具体的执行。\n\n## 步骤\n\n- [初始化workflow](https://github.com/taoliujun/blog/issues/36#issuecomment-1871790603)\n- [reply checking](https://github.com/taoliujun/blog/issues/36#issuecomment-1871806576)\n- [./.github/actions/unique-comment](https://github.com/taoliujun/blog/issues/36#issuecomment-1871818126)\n- [init](https://github.com/taoliujun/blog/issues/36#issuecomment-1871862632)\n- [eslint](https://github.com/taoliujun/blog/issues/36#issuecomment-1871862779)\n- [typescript](https://github.com/taoliujun/blog/issues/36#issuecomment-1871862850)\n- [unit test](https://github.com/taoliujun/blog/issues/36#issuecomment-1871863037)\n- [reply result](https://github.com/taoliujun/blog/issues/36#issuecomment-1871863117)\n\n<!--hexo-->\n\n# 初始化workflow\n\n在项目中新建文件`.github/workflows/check-pull-request.yml`，内容如下：\n\n```yaml\nname: test check pull request\nrun-name: 'check pull request #${{ github.event.pull_request.number }}'\non:\n    pull_request:\n        types: [opened, synchronize, reopened]\njobs:\n    replyChecking:\n        runs-on: ubuntu-latest\n        steps:\n            - run: echo 'replyChecking'\n\n    init:\n        runs-on: ubuntu-latest\n        steps:\n            - run: echo 'init'\n\n    eslint:\n        runs-on: ubuntu-latest\n        needs: [init]\n        steps:\n            - run: echo 'eslint'\n\n    typescript:\n        runs-on: ubuntu-latest\n        needs: [init]\n        steps:\n            - run: echo 'typescript'\n\n    unitTest:\n        runs-on: ubuntu-latest\n        needs: [init]\n        steps:\n            - run: echo 'unitTest'\n\n    replyResult:\n        runs-on: ubuntu-latest\n        needs: [replyChecking, eslint, typescript, unitTest]\n        steps:\n            - run: echo 'replyResult'\n```\n\n## name和run-name\n\n给workflow命名为`check pull request`，它会出现在Actions页面的左侧菜单中。运行实例名为`check pull request #44`，出现在右侧的运行列表中。如图：\n\n![](https://github.com/taoliujun/blog/assets/5689134/c1371ff2-8fc3-4e5b-8b60-3c572419938b)\n\n`run-name`中的`${{ github.event.pull_request.number }}`是workflow的上下文，这里读取了上下文中的pr编号。\n\n## on\n\n`on`指定了workflow的触发条件，这里配置了在pr创建、同步、重新打开的时候，触发该workflow。\n\n## jobs\n\n按照设想，需要定义几个job，分别是：\n\n-   replyChecking：回复用户正在检查中\n-   init：初始化仓库，缓存依赖项\n-   eslint：运行eslint检查\n-   typescript：运行typescript检查\n-   unitTest：运行单元测试\n-   replyResult：回复用户检查结果\n\n`jobs`是并行运行的，聪明如你肯定发现了，eslint、typescript、unitTest这三个job会涉及到安装npm依赖，所以它们最好在init后执行，确保依赖已经缓存了。\n\n其次，replyResult肯定要拿到eslint等job的结果才能执行，所以使用了`needs`管理它们的执行依赖关系。\n\n### runs-on\n\n每个job都运行在独立的容器中，github官方提供了windows、macos、linux多种容器，这里使用了ubuntu容器。\n\n## 测试\n\n发起一个pr，看到Actions页面出现了新的运行实例，点击进去，可以看到各个job的运行情况和依赖关系：\n\n![](https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e)\n\n<!--hexo-->\n\n# replyChecking\n\n在进行eslint检测之前，先在pr里回复`checking`，并且带上拽酷炫的话。将replyChecking改成如下：\n\n```yaml\nreplyChecking:\n    runs-on: ubuntu-latest\n    steps:\n        - name: Checkout\n          uses: actions/checkout@v4\n          with:\n              ref: ${{github.head_ref}}\n        - name: Get date time\n          id: getDateTime\n          run: echo \"result=$(TZ=Asia/Shanghai date)\" >> \"$GITHUB_OUTPUT\"\n        - name: Create or update a comment\n          uses: ./.github/actions/unique-comment\n          with:\n              uniqueIdentifier: ${{ github.workflow }}\n              body: |\n                  **Checking...**\n\n                  ---\n\n                  Commented by Action [${{github.workflow}}](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}), last updated on ${{steps.getDateTime.outputs.result}}.\n```\n\n`steps`每一步里`name`、`id`是可选的，`name`在Actions详情页面里会显示，更直观的看到step的名称，推荐写上。\n\n## Checkout\n\n`uses`表示使用一个action，名为`actions/checkout@v4`，它用来拉取仓库。\n\n> 同其他编程语言一样，重复的action可以封装起来。[action市场](https://github.com/marketplace?type=actions)提供了很多。\n\n`with`属性指定了该action的输入参数，每个action的参数不尽相同。\n\n`ref`参数表示要拉取的分支，`${{github.head_ref}}`也是一个上下文，表示当前pr的源分支。\n\n\n## Get Date time\n\n这step还写了`id`，表示该step在该job中的唯一标识，为什么要写呢？是为了下一步step能根据`id`读取到它的`output`。\n\n> **output**是workflow中非常重要的概念，它用于在step之间、job之间分享简单的数据。\n\n`run`就是在容器中跑一个命令，这里跑了一个unix bash命令，将当前时间写入到`$GITHUB_OUTPUT`中，键名为`result`。\n\n> `$GITHUB_OUTPUT`是workflow注入到容器中的一个路径，用于存放output。\n\n## Create or update a comment\n\n`uses`使用了本地的action，这个action用于创建或更新一个唯一回复，下一节说。\n\n> 有时候，官方或市场的action并不能满足你的需要，就得自己写一个了。\n\n同理，该action也有`with`属性，`uniqueIdentifier`是回复评论的唯一标识，`body`是回复的内容，内容使用了markdown语法，里面还涉及到上下文不一一细讲了。只说`${{steps.getDateTime.outputs.result}}`这个上下文表示获取getDateTime这个step中，键名为`result`的值。\n\n如果你不需要在内容里插入时间，那么上面的`Get Date time`就可以省略了。\n\n## 测试\n\n因为我已经有完整的代码了，所以运行后，pr中会有一个回复，如图：\n\n![](https://github.com/taoliujun/blog/assets/5689134/42396a84-b798-4f4e-9f39-5bf92a8acb15)\n<!--hexo-->\n\n# ./.github/actions/unique-comment\n\n这是一个封装的javascript action，用于对issue创建、更新唯一评论。\n\n## 目录结构\n\n创建目录`./.github/actions/unique-comment`，最终目录结构如下：\n\n```bash\n.\n├── action.yml\n├── config\n│   └── webpack.config.js\n├── dist\n│   ├── index.js\n│   └── index.js.LICENSE.txt\n├── package.json\n└── src\n    └── index.js\n```\n\n## action.yml\n\n这是action的配置文件，必须存在，内容如下：\n\n```yaml\nname: unique-comment\ndescription: create or update a unique comment\n\nruns:\n    using: 'node20'\n    main: './dist/index.js'\n\ninputs:\n    token:\n        description: 'GitHub token'\n        required: false\n        default: ${{ github.token }}\n    owner:\n        description: 'Repository owner'\n        required: false\n        default: ${{ github.event.repository.owner.login }}\n    repo:\n        description: 'Repository name'\n        required: false\n        default: ${{ github.event.repository.name }}\n    issue_number:\n        description: 'Issue number'\n        required: false\n        default: ${{ github.event.number }}\n    body:\n        description: 'Comment body'\n        required: false\n    uniqueIdentifier:\n        description: 'Unique identifier for comment'\n        required: false\n        default: 'unique-comment'\n```\n\n大部分属性不一一细讲了，都是简单的英文望文生义即可。\n\n`runs`表示运行在`node20`环境下，入口文件为`./dist/index.js`。\n\n`inputs`表示接受的参数，也就是之前提到的`with`属性里要输入的参数。用`required`表示是否必须传入，`default`表示默认值。\n\n## src/index.js\n\n为什么入口文件是`dist/index.js`，而不是`src/index.js`呢？因为要引用一些github官方提供的快捷操作github REST API的js包去操作issue评论(pull request也是一种issue)，最终打包后的文件才能在工作流中稳妥的运行。所以，写好`src/index.js`，再打包就行。\n\n该文件代码如下：\n\n```javascript\nconst core = require('@actions/core');\nconst github = require('@actions/github');\n\nconst main = async () => {\n    const token = core.getInput('token');\n    const owner = core.getInput('owner');\n    const repo = core.getInput('repo');\n    const issueNumber = core.getInput('issue_number');\n    const uniqueIdentifier = `[^uniqueIdentifier]: ${core.getInput('uniqueIdentifier')}`;\n    const body = `${core.getInput('body')}\\n\\n${uniqueIdentifier}`;\n\n    core.debug(`uniqueIdentifier is ${uniqueIdentifier}`);\n\n    const octokit = github.getOctokit(token);\n\n    const comments = await octokit.rest.issues.listComments({\n        owner,\n        repo,\n        issue_number: issueNumber,\n    });\n\n    const botComment = comments.data.find((v) => v.body.includes(uniqueIdentifier));\n\n    if (botComment) {\n        core.info('update comment successfully.');\n        await octokit.rest.issues.updateComment({\n            owner,\n            repo,\n            comment_id: botComment.id,\n            body,\n        });\n    } else {\n        core.info('create comment successfully.');\n        await octokit.rest.issues.createComment({\n            owner,\n            repo,\n            issue_number: issueNumber,\n            body,\n        });\n    }\n};\n\ntry {\n    main();\n} catch (err) {\n    core.setFailed(err.message);\n}\n```\n\n`@actions/core`和`@actions/github`是github官方提供的js包，前者可以方便的读取入参等，后者可以方便的操作github REST API。\n\n`main`函数的代码就是原生javascript，不一一解释了，主要通过`uniqueIdentifier`来判断是否发布过评论，如果是，就更新评论，否则就创建评论。\n\n> markdown语法`[^uniqueIdentifier]`表示脚注，不会被渲染。\n\n`core.setFailed(err.message);`表示抛出退出代码。\n\n## config/webpack.config.js\n\n打包用的，配置简单可用即可：\n\n```javascript\nmodule.exports = {\n    mode: 'production',\n    target: 'node20',\n    entry: './src/index.js',\n    output: {\n        filename: 'index.js',\n        clean: true,\n    },\n};\n```\n\n## package.json\n\n```json\n{\n  \"name\": \"unique-comment\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"webpack --config ./config/webpack.config.js\"\n  },\n  \"dependencies\": {\n    \"@actions/core\": \"^1.10.1\",\n    \"@actions/github\": \"^6.0.0\"\n  },\n  \"devDependencies\": {\n    \"webpack\": \"^5.89.0\",\n    \"webpack-cli\": \"^5.1.4\"\n  }\n}\n```\n\n没啥好说的，列出了依赖项。和一个打包脚本。\n\n## 测试\n\n修改了`src/index.js`得`build`，然后push到github仓库。\n\n记得将**dist**目录也提交到github仓库。\n\n<!--hexo-->\n\n# init\n\n现在，开始搞正经的了。\n\n先初始化项目，这个job的目的仅仅是为了缓存pnpm依赖项，如果你的项目的依赖项不经常更新，可以省略这个job，后续也不要`needs`这个job。\n\n将init改成如下：\n\n```yaml\ninit:\n        runs-on: ubuntu-latest\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: pnpm install\n```\n\n相信经过对之前的job的了解，这里的配置就看起来很简单了。\n\n## Init pnpm\n\n使用第三方action，安装pnpm@^8。\n\n## Init node\n\n`cache: 'pnpm'`指定缓存机制，它内部是利用了workflow的cache机制。\n\n## Install dependencies\n\n安装依赖项，触发缓存。\n<!--hexo-->\n\n# eslint\n\n将eslint改成如下：\n\n```yaml\neslint:\n        runs-on: ubuntu-latest\n        needs: [init]\n        outputs:\n            result: ${{ steps.lint.outputs.result }}\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n                  fetch-depth: 0\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: pnpm install\n\n            - name: Run eslint\n              id: lint\n              uses: actions/github-script@v7\n              with:\n                  result-encoding: string\n                  script: |\n                      let output = '';\n                      let outerr = '';\n                      let diffFiles = '';\n\n                      await exec.exec(\n                        `git diff --name-only origin/${{github.base_ref}}`,\n                        [],\n                        {\n                          // silent: true,\n                          // ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                diffFiles += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      const lintFiles = diffFiles.split(`\\n`).filter((file) => {\n                        return file.endsWith('.js') || file.endsWith('.ts') || file.endsWith('.tsx')\n                      }).join(' ');\n\n                      await exec.exec(\n                        // \"pnpm run lint --format stylish\",\n                        `pnpm eslint ${lintFiles}`,\n                        [],\n                        {\n                          // silent: true,\n                          ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                output += data.toString();\n                            },\n                            stderr: (data) => {\n                                outerr += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      if (outerr) {\n                        return `:x: Some command execution errors, non-eslint business errors.`;\n                      }\n\n                      const errorMatch = output.match(/(\\d+) errors?/);\n                      const warnMatch = output.match(/(\\d+) warnings?/);\n\n                      if (errorMatch && errorMatch?.[1] !== '0') {\n                        return `:x: ${errorMatch?.[0]} ${warnMatch?.[0]}`;\n                      }\n\n                      return `:white_check_mark: ${errorMatch?.[0] || '0 error'} ${warnMatch?.[0] || '0 warning'}`;\n```\n\n## needs\n\n使用`needs`依赖init，可以使用到pnpm的缓存项，防止install太慢。\n\n> 因为eslint、typescript、unitTest都需要pnpm install，所以一个前置的init去缓存pnpm依赖项，可以加快后续的install速度。\n\n## outputs\n\njob里的outputs，可以在依赖它的其他job中访问到。这里使用`${{ steps.lint.outputs.result }}`去获取该job中lint这个step里的output里的result。\n\n> output有job和step两个维度，注意区分。\n\n\n## Run eslint\n\n它uses了`actions/github-script@v7`，这是github官方提供的一个action，可以在`with.script`里写js代码去执行，同时它会注入一些变量到script中去，见它的[官方文档](https://github.com/actions/github-script/tree/v7/)。\n\n> 对于简单的js代码，可以使用这个action去完成，不用再去写一个js文件。\n\n`result-encoding`是指定script返回的数据格式的，默认是json，这指定为string。\n\n> 为什么script里return了string，还要指定为string呢？\n> 因为`return 'hello'`在json encode后是`'\"hello\"'`，而string encode后为`'hello'`。\n\nscript里是原生的js代码了，里面的`exec`是该action注入的变量，用来执行shell命令。\n\n这段js代码做了两个事情，一是`git diff`获取pr中改动的文件列表，二是`eslint`检查这些增量文件，最后返回处理的结果。\n\n## fetch-depth\n\nInit repo这个step里设置了`fetch-depth: 0`，不然获取不到完整的git分支，具体看`actions/checkout`的解释，涉及到git的知识不展开细说了。\n\n## steps.lint.outputs.result\n\n`steps.lint.outputs.result`为什么能拿到lint step里的output.result呢？因为`actions/github-script`这个action内部将script的返回值，设置到`$GITHUB_OUTPUT`里了，且键名为`result`。\n<!--hexo-->\n\n# typescript\n\n和eslint的配置大同小异，只是改了对检测结果的判断。\n\n```yaml\ntypescript:\n        runs-on: ubuntu-latest\n        needs: [init]\n        outputs:\n            result: ${{ steps.lint.outputs.result }}\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: pnpm install\n\n            - name: Run lint\n              id: lint\n              uses: actions/github-script@v7\n              with:\n                  result-encoding: string\n                  script: |\n                      let output = '';\n                      let outerr = '';\n\n                      await exec.exec(\n                        `pnpm run -r lint:ts`,\n                        [],\n                        {\n                          // silent: true,\n                          ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                output += data.toString();\n                            },\n                            stderr: (data) => {\n                                outerr += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      if (outerr) {\n                        return `:x: Some command execution errors, no business errors.`;\n                      }\n\n                      const errorMatch = output.match(/error TS/g);\n\n                      if (errorMatch) {\n                        return `:x: ${errorMatch?.length} errors`;\n                      }\n\n                      return `:white_check_mark: ${'0 error'}`;\n```\n<!--hexo-->\n\n# unitTest\n\n和eslint的配置大同小异，只是改了对检测结果的判断。唯一的区别是jest的检测结果是输出到stderr，见https://github.com/jestjs/jest/issues/5064。\n\n```yaml\nunitTest:\n        runs-on: ubuntu-latest\n        needs: [init]\n        outputs:\n            result: ${{ steps.lint.outputs.result }}\n        steps:\n            - name: Init repo\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n\n            - name: Init pnpm\n              uses: pnpm/action-setup@v2\n              with:\n                  version: 8\n\n            - name: Init node\n              uses: actions/setup-node@v4\n              with:\n                  node-version: 20\n                  cache: 'pnpm'\n\n            - name: Install dependencies\n              run: |\n                  pnpm remove @nike/eslint-multi-formatter || true\n                  pnpm remove @nike/svg-packer || true\n                  pnpm install\n\n            - name: Run lint\n              id: lint\n              uses: actions/github-script@v7\n              with:\n                  result-encoding: string\n                  script: |\n                      let output = '';\n                      let outerr = '';\n\n                      await exec.exec(\n                        `pnpm run test`,\n                        [],\n                        {\n                          // silent: true,\n                          ignoreReturnCode: true,\n                          listeners: {\n                            stdout: (data) => {\n                                output += data.toString();\n                            },\n                            stderr: (data) => {\n                                outerr += data.toString();\n                            },\n                          },\n                        }\n                      );\n\n                      // why use outerr? https://github.com/jestjs/jest/issues/5064\n\n                      const failMatch = outerr.match(/Test Suites: \\d+ failed/);\n\n                      if (failMatch) {\n                        return `:x: ${failMatch?.[0]}`;\n                      }\n\n                      const errorMatch = outerr.match(/Jest: \"global\" coverage threshold for lines \\([0-9\\.]+%\\) not met: [0-9\\.]+%/);\n\n                      if (errorMatch) {\n                        return `:x: ${errorMatch?.[0]}`;\n                      }\n\n                      return `:white_check_mark: passed`;\n```\n<!--hexo-->\n\n# replyResult\n\n最后，将几个检测的结果进行汇总，回复到pr里就行了。\n\n```yaml\nreplyResult:\n        runs-on: ubuntu-latest\n        needs: [replyChecking, eslint, typescript, unitTest]\n        steps:\n            - name: Checkout\n              uses: actions/checkout@v4\n              with:\n                  ref: ${{github.head_ref}}\n            - name: Get date time\n              id: getDateTime\n              run: echo \"result=$(TZ=Asia/Shanghai date)\" >> \"$GITHUB_OUTPUT\"\n            - name: Create or update a comment\n              uses: ./.github/actions/unique-comment\n              with:\n                  uniqueIdentifier: ${{ github.workflow }}\n                  body: |\n                      ## Eslint Check Result\n\n                      ${{needs.eslint.outputs.result}}\n\n                      ## Typescript Check Result\n\n                      ${{needs.typescript.outputs.result}}\n\n                      ## UnitTest Check Result\n\n                      ${{needs.unitTest.outputs.result}}\n\n                      ---\n\n                      Commented by Action [${{github.workflow}}](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}), last updated on ${{steps.getDateTime.outputs.result}}.\n```\n\n和replyChecking差不多，在body里使用`${{needs.eslint.outputs.result}}`去读取了eslint job的outputs。\n\n## 测试\n\n去发起新的pr，故意提交一个有eslint error的js/ts文件，看看表现吧~\n\n","slug":"github-actions-sample-eslint-in-pull-request","published":1,"updated":"2024-01-03T09:13:36.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqxk9r600000joor84vf3yg8","content":"<p>原文链接：<a href=\"https://github.com/taoliujun/blog/issues/36\">https://github.com/taoliujun/blog/issues/36</a></p>\n<!--hexo\n---\nurl: github-actions-sample-eslint-in-pull-request\ntags:\n  - github actions\n---\n-->\n\n<p>一个在pull request发起的时候执行eslint检测的workflow，<a href=\"https://github.com/taoliujun/npm-packages/blob/master/.github/workflows/check-pull-request.yml\">点此查看完整代码</a>，它实现的功能如下：</p>\n<ul>\n<li>在pull request创建、更新的时候执行。</li>\n<li>先回复一个评论，告诉用户正在运行。</li>\n<li>初始化仓库，并安装依赖，产生依赖缓存。</li>\n<li>运行eslint增量检查。</li>\n<li>运行typescript检查。</li>\n<li>运行jest检查。</li>\n<li>更新之前的评论，回复检查的结果。</li>\n</ul>\n<p>运行截图：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e\" alt=\"Alt text\"></p>\n<p>为避免歧义，涉及到github action的术语都是英文的。术语介绍如下：</p>\n<ul>\n<li>workflow，工作流，可以理解为yml文件。</li>\n<li>jobs，工作，一个workflow可以包含多个job，并行执行。</li>\n<li>steps，作业，一个job可以包含多个step，串行执行。</li>\n<li>action，操作，作业中具体的执行。</li>\n</ul>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ul>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871790603\">初始化workflow</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871806576\">reply checking</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871818126\">.&#x2F;.github&#x2F;actions&#x2F;unique-comment</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871862632\">init</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871862779\">eslint</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871862850\">typescript</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871863037\">unit test</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871863117\">reply result</a></li>\n</ul>\n<!--hexo-->\n\n<h1 id=\"初始化workflow\"><a href=\"#初始化workflow\" class=\"headerlink\" title=\"初始化workflow\"></a>初始化workflow</h1><p>在项目中新建文件<code>.github/workflows/check-pull-request.yml</code>，内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">test</span> <span class=\"string\">check</span> <span class=\"string\">pull</span> <span class=\"string\">request</span></span><br><span class=\"line\"><span class=\"attr\">run-name:</span> <span class=\"string\">&#x27;check pull request #$<span class=\"template-variable\">&#123;&#123; github.event.pull_request.number &#125;&#125;</span>&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">        <span class=\"attr\">types:</span> [<span class=\"string\">opened</span>, <span class=\"string\">synchronize</span>, <span class=\"string\">reopened</span>]</span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">    <span class=\"attr\">replyChecking:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;replyChecking&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">init:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;init&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">eslint:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;eslint&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">typescript:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;typescript&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">unitTest:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;unitTest&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">replyResult:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">replyChecking</span>, <span class=\"string\">eslint</span>, <span class=\"string\">typescript</span>, <span class=\"string\">unitTest</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;replyResult&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"name和run-name\"><a href=\"#name和run-name\" class=\"headerlink\" title=\"name和run-name\"></a>name和run-name</h2><p>给workflow命名为<code>check pull request</code>，它会出现在Actions页面的左侧菜单中。运行实例名为<code>check pull request #44</code>，出现在右侧的运行列表中。如图：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/c1371ff2-8fc3-4e5b-8b60-3c572419938b\"></p>\n<p><code>run-name</code>中的<code>$&#123;&#123; github.event.pull_request.number &#125;&#125;</code>是workflow的上下文，这里读取了上下文中的pr编号。</p>\n<h2 id=\"on\"><a href=\"#on\" class=\"headerlink\" title=\"on\"></a>on</h2><p><code>on</code>指定了workflow的触发条件，这里配置了在pr创建、同步、重新打开的时候，触发该workflow。</p>\n<h2 id=\"jobs\"><a href=\"#jobs\" class=\"headerlink\" title=\"jobs\"></a>jobs</h2><p>按照设想，需要定义几个job，分别是：</p>\n<ul>\n<li>replyChecking：回复用户正在检查中</li>\n<li>init：初始化仓库，缓存依赖项</li>\n<li>eslint：运行eslint检查</li>\n<li>typescript：运行typescript检查</li>\n<li>unitTest：运行单元测试</li>\n<li>replyResult：回复用户检查结果</li>\n</ul>\n<p><code>jobs</code>是并行运行的，聪明如你肯定发现了，eslint、typescript、unitTest这三个job会涉及到安装npm依赖，所以它们最好在init后执行，确保依赖已经缓存了。</p>\n<p>其次，replyResult肯定要拿到eslint等job的结果才能执行，所以使用了<code>needs</code>管理它们的执行依赖关系。</p>\n<h3 id=\"runs-on\"><a href=\"#runs-on\" class=\"headerlink\" title=\"runs-on\"></a>runs-on</h3><p>每个job都运行在独立的容器中，github官方提供了windows、macos、linux多种容器，这里使用了ubuntu容器。</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>发起一个pr，看到Actions页面出现了新的运行实例，点击进去，可以看到各个job的运行情况和依赖关系：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e\"></p>\n<!--hexo-->\n\n<h1 id=\"replyChecking\"><a href=\"#replyChecking\" class=\"headerlink\" title=\"replyChecking\"></a>replyChecking</h1><p>在进行eslint检测之前，先在pr里回复<code>checking</code>，并且带上拽酷炫的话。将replyChecking改成如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">replyChecking:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">          <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">          <span class=\"attr\">with:</span></span><br><span class=\"line\">              <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Get</span> <span class=\"string\">date</span> <span class=\"string\">time</span></span><br><span class=\"line\">          <span class=\"attr\">id:</span> <span class=\"string\">getDateTime</span></span><br><span class=\"line\">          <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;result=$(TZ=Asia/Shanghai date)&quot;</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">&quot;$GITHUB_OUTPUT&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Create</span> <span class=\"string\">or</span> <span class=\"string\">update</span> <span class=\"string\">a</span> <span class=\"string\">comment</span></span><br><span class=\"line\">          <span class=\"attr\">uses:</span> <span class=\"string\">./.github/actions/unique-comment</span></span><br><span class=\"line\">          <span class=\"attr\">with:</span></span><br><span class=\"line\">              <span class=\"attr\">uniqueIdentifier:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.workflow</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">              <span class=\"attr\">body:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                  **Checking...**</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                  <span class=\"string\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"string\">Commented</span> <span class=\"string\">by</span> <span class=\"string\">Action</span> [<span class=\"string\">$<span class=\"template-variable\">&#123;&#123;github.workflow&#125;&#125;</span></span>]<span class=\"string\">($&#123;&#123;github.event.repository.html_url&#125;&#125;/actions/runs/$&#123;&#123;github.run_id&#125;&#125;),</span> <span class=\"string\">last</span> <span class=\"string\">updated</span> <span class=\"string\">on</span> <span class=\"string\">$&#123;&#123;steps.getDateTime.outputs.result&#125;&#125;.</span></span><br></pre></td></tr></table></figure>\n\n<p><code>steps</code>每一步里<code>name</code>、<code>id</code>是可选的，<code>name</code>在Actions详情页面里会显示，更直观的看到step的名称，推荐写上。</p>\n<h2 id=\"Checkout\"><a href=\"#Checkout\" class=\"headerlink\" title=\"Checkout\"></a>Checkout</h2><p><code>uses</code>表示使用一个action，名为<code>actions/checkout@v4</code>，它用来拉取仓库。</p>\n<blockquote>\n<p>同其他编程语言一样，重复的action可以封装起来。<a href=\"https://github.com/marketplace?type=actions\">action市场</a>提供了很多。</p>\n</blockquote>\n<p><code>with</code>属性指定了该action的输入参数，每个action的参数不尽相同。</p>\n<p><code>ref</code>参数表示要拉取的分支，<code>$&#123;&#123;github.head_ref&#125;&#125;</code>也是一个上下文，表示当前pr的源分支。</p>\n<h2 id=\"Get-Date-time\"><a href=\"#Get-Date-time\" class=\"headerlink\" title=\"Get Date time\"></a>Get Date time</h2><p>这step还写了<code>id</code>，表示该step在该job中的唯一标识，为什么要写呢？是为了下一步step能根据<code>id</code>读取到它的<code>output</code>。</p>\n<blockquote>\n<p><strong>output</strong>是workflow中非常重要的概念，它用于在step之间、job之间分享简单的数据。</p>\n</blockquote>\n<p><code>run</code>就是在容器中跑一个命令，这里跑了一个unix bash命令，将当前时间写入到<code>$GITHUB_OUTPUT</code>中，键名为<code>result</code>。</p>\n<blockquote>\n<p><code>$GITHUB_OUTPUT</code>是workflow注入到容器中的一个路径，用于存放output。</p>\n</blockquote>\n<h2 id=\"Create-or-update-a-comment\"><a href=\"#Create-or-update-a-comment\" class=\"headerlink\" title=\"Create or update a comment\"></a>Create or update a comment</h2><p><code>uses</code>使用了本地的action，这个action用于创建或更新一个唯一回复，下一节说。</p>\n<blockquote>\n<p>有时候，官方或市场的action并不能满足你的需要，就得自己写一个了。</p>\n</blockquote>\n<p>同理，该action也有<code>with</code>属性，<code>uniqueIdentifier</code>是回复评论的唯一标识，<code>body</code>是回复的内容，内容使用了markdown语法，里面还涉及到上下文不一一细讲了。只说<code>$&#123;&#123;steps.getDateTime.outputs.result&#125;&#125;</code>这个上下文表示获取getDateTime这个step中，键名为<code>result</code>的值。</p>\n<p>如果你不需要在内容里插入时间，那么上面的<code>Get Date time</code>就可以省略了。</p>\n<h2 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>因为我已经有完整的代码了，所以运行后，pr中会有一个回复，如图：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/42396a84-b798-4f4e-9f39-5bf92a8acb15\"></p>\n<!--hexo-->\n\n<h1 id=\"x2F-github-x2F-actions-x2F-unique-comment\"><a href=\"#x2F-github-x2F-actions-x2F-unique-comment\" class=\"headerlink\" title=\".&#x2F;.github&#x2F;actions&#x2F;unique-comment\"></a>.&#x2F;.github&#x2F;actions&#x2F;unique-comment</h1><p>这是一个封装的javascript action，用于对issue创建、更新唯一评论。</p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><p>创建目录<code>./.github/actions/unique-comment</code>，最终目录结构如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── action.yml</span><br><span class=\"line\">├── config</span><br><span class=\"line\">│   └── webpack.config.js</span><br><span class=\"line\">├── dist</span><br><span class=\"line\">│   ├── index.js</span><br><span class=\"line\">│   └── index.js.LICENSE.txt</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">└── src</span><br><span class=\"line\">    └── index.js</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"action-yml\"><a href=\"#action-yml\" class=\"headerlink\" title=\"action.yml\"></a>action.yml</h2><p>这是action的配置文件，必须存在，内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">unique-comment</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">create</span> <span class=\"string\">or</span> <span class=\"string\">update</span> <span class=\"string\">a</span> <span class=\"string\">unique</span> <span class=\"string\">comment</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">runs:</span></span><br><span class=\"line\">    <span class=\"attr\">using:</span> <span class=\"string\">&#x27;node20&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">main:</span> <span class=\"string\">&#x27;./dist/index.js&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">inputs:</span></span><br><span class=\"line\">    <span class=\"attr\">token:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;GitHub token&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.token</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">owner:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Repository owner&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.event.repository.owner.login</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Repository name&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.event.repository.name</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">issue_number:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Issue number&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.event.number</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">body:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Comment body&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">uniqueIdentifier:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Unique identifier for comment&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">&#x27;unique-comment&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>大部分属性不一一细讲了，都是简单的英文望文生义即可。</p>\n<p><code>runs</code>表示运行在<code>node20</code>环境下，入口文件为<code>./dist/index.js</code>。</p>\n<p><code>inputs</code>表示接受的参数，也就是之前提到的<code>with</code>属性里要输入的参数。用<code>required</code>表示是否必须传入，<code>default</code>表示默认值。</p>\n<h2 id=\"src-x2F-index-js\"><a href=\"#src-x2F-index-js\" class=\"headerlink\" title=\"src&#x2F;index.js\"></a>src&#x2F;index.js</h2><p>为什么入口文件是<code>dist/index.js</code>，而不是<code>src/index.js</code>呢？因为要引用一些github官方提供的快捷操作github REST API的js包去操作issue评论(pull request也是一种issue)，最终打包后的文件才能在工作流中稳妥的运行。所以，写好<code>src/index.js</code>，再打包就行。</p>\n<p>该文件代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> core = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@actions/core&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> github = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@actions/github&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">main</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;token&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> owner = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;owner&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repo = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;repo&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> issueNumber = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;issue_number&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> uniqueIdentifier = <span class=\"string\">`[^uniqueIdentifier]: <span class=\"subst\">$&#123;core.getInput(<span class=\"string\">&#x27;uniqueIdentifier&#x27;</span>)&#125;</span>`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> body = <span class=\"string\">`<span class=\"subst\">$&#123;core.getInput(<span class=\"string\">&#x27;body&#x27;</span>)&#125;</span>\\n\\n<span class=\"subst\">$&#123;uniqueIdentifier&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    core.<span class=\"title function_\">debug</span>(<span class=\"string\">`uniqueIdentifier is <span class=\"subst\">$&#123;uniqueIdentifier&#125;</span>`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> octokit = github.<span class=\"title function_\">getOctokit</span>(token);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> comments = <span class=\"keyword\">await</span> octokit.<span class=\"property\">rest</span>.<span class=\"property\">issues</span>.<span class=\"title function_\">listComments</span>(&#123;</span><br><span class=\"line\">        owner,</span><br><span class=\"line\">        repo,</span><br><span class=\"line\">        <span class=\"attr\">issue_number</span>: issueNumber,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> botComment = comments.<span class=\"property\">data</span>.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> v.<span class=\"property\">body</span>.<span class=\"title function_\">includes</span>(uniqueIdentifier));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (botComment) &#123;</span><br><span class=\"line\">        core.<span class=\"title function_\">info</span>(<span class=\"string\">&#x27;update comment successfully.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">await</span> octokit.<span class=\"property\">rest</span>.<span class=\"property\">issues</span>.<span class=\"title function_\">updateComment</span>(&#123;</span><br><span class=\"line\">            owner,</span><br><span class=\"line\">            repo,</span><br><span class=\"line\">            <span class=\"attr\">comment_id</span>: botComment.<span class=\"property\">id</span>,</span><br><span class=\"line\">            body,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        core.<span class=\"title function_\">info</span>(<span class=\"string\">&#x27;create comment successfully.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">await</span> octokit.<span class=\"property\">rest</span>.<span class=\"property\">issues</span>.<span class=\"title function_\">createComment</span>(&#123;</span><br><span class=\"line\">            owner,</span><br><span class=\"line\">            repo,</span><br><span class=\"line\">            <span class=\"attr\">issue_number</span>: issueNumber,</span><br><span class=\"line\">            body,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">main</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    core.<span class=\"title function_\">setFailed</span>(err.<span class=\"property\">message</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>@actions/core</code>和<code>@actions/github</code>是github官方提供的js包，前者可以方便的读取入参等，后者可以方便的操作github REST API。</p>\n<p><code>main</code>函数的代码就是原生javascript，不一一解释了，主要通过<code>uniqueIdentifier</code>来判断是否发布过评论，如果是，就更新评论，否则就创建评论。</p>\n<blockquote>\n<p>markdown语法<code>[^uniqueIdentifier]</code>表示脚注，不会被渲染。</p>\n</blockquote>\n<p><code>core.setFailed(err.message);</code>表示抛出退出代码。</p>\n<h2 id=\"config-x2F-webpack-config-js\"><a href=\"#config-x2F-webpack-config-js\" class=\"headerlink\" title=\"config&#x2F;webpack.config.js\"></a>config&#x2F;webpack.config.js</h2><p>打包用的，配置简单可用即可：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">target</span>: <span class=\"string\">&#x27;node20&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">clean</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;unique-comment&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;1.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;private&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack --config ./config/webpack.config.js&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;@actions/core&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^1.10.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;@actions/github&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^6.0.0&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;devDependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;webpack&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^5.89.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;webpack-cli&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^5.1.4&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>没啥好说的，列出了依赖项。和一个打包脚本。</p>\n<h2 id=\"测试-2\"><a href=\"#测试-2\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>修改了<code>src/index.js</code>得<code>build</code>，然后push到github仓库。</p>\n<p>记得将<strong>dist</strong>目录也提交到github仓库。</p>\n<!--hexo-->\n\n<h1 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h1><p>现在，开始搞正经的了。</p>\n<p>先初始化项目，这个job的目的仅仅是为了缓存pnpm依赖项，如果你的项目的依赖项不经常更新，可以省略这个job，后续也不要<code>needs</code>这个job。</p>\n<p>将init改成如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">init:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">pnpm</span> <span class=\"string\">install</span></span><br></pre></td></tr></table></figure>\n\n<p>相信经过对之前的job的了解，这里的配置就看起来很简单了。</p>\n<h2 id=\"Init-pnpm\"><a href=\"#Init-pnpm\" class=\"headerlink\" title=\"Init pnpm\"></a>Init pnpm</h2><p>使用第三方action，安装pnpm@^8。</p>\n<h2 id=\"Init-node\"><a href=\"#Init-node\" class=\"headerlink\" title=\"Init node\"></a>Init node</h2><p><code>cache: &#39;pnpm&#39;</code>指定缓存机制，它内部是利用了workflow的cache机制。</p>\n<h2 id=\"Install-dependencies\"><a href=\"#Install-dependencies\" class=\"headerlink\" title=\"Install dependencies\"></a>Install dependencies</h2><p>安装依赖项，触发缓存。</p>\n<!--hexo-->\n\n<h1 id=\"eslint\"><a href=\"#eslint\" class=\"headerlink\" title=\"eslint\"></a>eslint</h1><p>将eslint改成如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eslint:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">outputs:</span></span><br><span class=\"line\">            <span class=\"attr\">result:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.lint.outputs.result</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\">                  <span class=\"attr\">fetch-depth:</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">pnpm</span> <span class=\"string\">install</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">eslint</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/github-script@v7</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">result-encoding:</span> <span class=\"string\">string</span></span><br><span class=\"line\">                  <span class=\"attr\">script:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      let output = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let outerr = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let diffFiles = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">await</span> <span class=\"string\">exec.exec(</span></span><br><span class=\"line\">                        <span class=\"string\">`git</span> <span class=\"string\">diff</span> <span class=\"string\">--name-only</span> <span class=\"string\">origin/$&#123;&#123;github.base_ref&#125;&#125;`,</span></span><br><span class=\"line\">                        []<span class=\"string\">,</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">silent:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">ignoreReturnCode:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">listeners:</span> &#123;</span><br><span class=\"line\">                            <span class=\"attr\">stdout:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">diffFiles</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                          &#125;,</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      <span class=\"string\">);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">lintFiles</span> <span class=\"string\">=</span> <span class=\"string\">diffFiles.split(`\\n`).filter((file)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">file.endsWith(&#x27;.js&#x27;)</span> <span class=\"string\">||</span> <span class=\"string\">file.endsWith(&#x27;.ts&#x27;)</span> <span class=\"string\">||</span> <span class=\"string\">file.endsWith(&#x27;.tsx&#x27;)</span></span><br><span class=\"line\">                      &#125;<span class=\"string\">).join(&#x27;</span> <span class=\"string\">&#x27;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      await exec.exec(</span></span><br><span class=\"line\"><span class=\"string\">                        // &quot;pnpm run lint --format stylish&quot;,</span></span><br><span class=\"line\"><span class=\"string\">                        `pnpm eslint $&#123;lintFiles&#125;`,</span></span><br><span class=\"line\"><span class=\"string\">                        [],</span></span><br><span class=\"line\"><span class=\"string\">                        &#123;</span></span><br><span class=\"line\"><span class=\"string\">                          // silent: true,</span></span><br><span class=\"line\"><span class=\"string\">                          ignoreReturnCode: true,</span></span><br><span class=\"line\"><span class=\"string\">                          listeners: &#123;</span></span><br><span class=\"line\"><span class=\"string\">                            stdout: (data) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">                                output += data.toString();</span></span><br><span class=\"line\"><span class=\"string\">                            &#125;,</span></span><br><span class=\"line\"><span class=\"string\">                            stderr: (data) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">                                outerr += data.toString();</span></span><br><span class=\"line\"><span class=\"string\">                            &#125;,</span></span><br><span class=\"line\"><span class=\"string\">                          &#125;,</span></span><br><span class=\"line\"><span class=\"string\">                        &#125;</span></span><br><span class=\"line\"><span class=\"string\">                      );</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      if (outerr) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                        return `:x: Some command execution errors, non-eslint business errors.`;</span></span><br><span class=\"line\"><span class=\"string\">                      &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      const errorMatch = output.match(/(\\d+) errors?/);</span></span><br><span class=\"line\"><span class=\"string\">                      const warnMatch = output.match(/(\\d+) warnings?/);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      if (errorMatch &amp;&amp; errorMatch?.[1] !== &#x27;</span><span class=\"number\">0</span><span class=\"string\">&#x27;) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                        return `:x: $&#123;errorMatch?.[0]&#125; $&#123;warnMatch?.[0]&#125;`;</span></span><br><span class=\"line\"><span class=\"string\">                      &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      return `:white_check_mark: $&#123;errorMatch?.[0] || &#x27;</span><span class=\"number\">0</span> <span class=\"string\">error&#x27;&#125;</span> <span class=\"string\">$&#123;warnMatch?.[0]</span> <span class=\"string\">||</span> <span class=\"string\">&#x27;0 warning&#x27;</span><span class=\"string\">&#125;`;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"needs\"><a href=\"#needs\" class=\"headerlink\" title=\"needs\"></a>needs</h2><p>使用<code>needs</code>依赖init，可以使用到pnpm的缓存项，防止install太慢。</p>\n<blockquote>\n<p>因为eslint、typescript、unitTest都需要pnpm install，所以一个前置的init去缓存pnpm依赖项，可以加快后续的install速度。</p>\n</blockquote>\n<h2 id=\"outputs\"><a href=\"#outputs\" class=\"headerlink\" title=\"outputs\"></a>outputs</h2><p>job里的outputs，可以在依赖它的其他job中访问到。这里使用<code>$&#123;&#123; steps.lint.outputs.result &#125;&#125;</code>去获取该job中lint这个step里的output里的result。</p>\n<blockquote>\n<p>output有job和step两个维度，注意区分。</p>\n</blockquote>\n<h2 id=\"Run-eslint\"><a href=\"#Run-eslint\" class=\"headerlink\" title=\"Run eslint\"></a>Run eslint</h2><p>它uses了<code>actions/github-script@v7</code>，这是github官方提供的一个action，可以在<code>with.script</code>里写js代码去执行，同时它会注入一些变量到script中去，见它的<a href=\"https://github.com/actions/github-script/tree/v7/\">官方文档</a>。</p>\n<blockquote>\n<p>对于简单的js代码，可以使用这个action去完成，不用再去写一个js文件。</p>\n</blockquote>\n<p><code>result-encoding</code>是指定script返回的数据格式的，默认是json，这指定为string。</p>\n<blockquote>\n<p>为什么script里return了string，还要指定为string呢？<br>因为<code>return &#39;hello&#39;</code>在json encode后是<code>&#39;&quot;hello&quot;&#39;</code>，而string encode后为<code>&#39;hello&#39;</code>。</p>\n</blockquote>\n<p>script里是原生的js代码了，里面的<code>exec</code>是该action注入的变量，用来执行shell命令。</p>\n<p>这段js代码做了两个事情，一是<code>git diff</code>获取pr中改动的文件列表，二是<code>eslint</code>检查这些增量文件，最后返回处理的结果。</p>\n<h2 id=\"fetch-depth\"><a href=\"#fetch-depth\" class=\"headerlink\" title=\"fetch-depth\"></a>fetch-depth</h2><p>Init repo这个step里设置了<code>fetch-depth: 0</code>，不然获取不到完整的git分支，具体看<code>actions/checkout</code>的解释，涉及到git的知识不展开细说了。</p>\n<h2 id=\"steps-lint-outputs-result\"><a href=\"#steps-lint-outputs-result\" class=\"headerlink\" title=\"steps.lint.outputs.result\"></a>steps.lint.outputs.result</h2><p><code>steps.lint.outputs.result</code>为什么能拿到lint step里的output.result呢？因为<code>actions/github-script</code>这个action内部将script的返回值，设置到<code>$GITHUB_OUTPUT</code>里了，且键名为<code>result</code>。</p>\n<!--hexo-->\n\n<h1 id=\"typescript\"><a href=\"#typescript\" class=\"headerlink\" title=\"typescript\"></a>typescript</h1><p>和eslint的配置大同小异，只是改了对检测结果的判断。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">typescript:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">outputs:</span></span><br><span class=\"line\">            <span class=\"attr\">result:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.lint.outputs.result</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">pnpm</span> <span class=\"string\">install</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/github-script@v7</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">result-encoding:</span> <span class=\"string\">string</span></span><br><span class=\"line\">                  <span class=\"attr\">script:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      let output = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let outerr = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">await</span> <span class=\"string\">exec.exec(</span></span><br><span class=\"line\">                        <span class=\"string\">`pnpm</span> <span class=\"string\">run</span> <span class=\"string\">-r</span> <span class=\"string\">lint:ts`,</span></span><br><span class=\"line\">                        []<span class=\"string\">,</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">silent:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">ignoreReturnCode:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">listeners:</span> &#123;</span><br><span class=\"line\">                            <span class=\"attr\">stdout:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">output</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                            <span class=\"attr\">stderr:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">outerr</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                          &#125;,</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      <span class=\"string\">);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(outerr)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">Some</span> <span class=\"string\">command</span> <span class=\"string\">execution</span> <span class=\"string\">errors</span>, <span class=\"literal\">no</span> <span class=\"string\">business</span> <span class=\"string\">errors.`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">errorMatch</span> <span class=\"string\">=</span> <span class=\"string\">output.match(/error</span> <span class=\"string\">TS/g);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(errorMatch)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">$</span>&#123;<span class=\"string\">errorMatch?.length</span>&#125; <span class=\"string\">errors`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">return</span> <span class=\"string\">`:white_check_mark:</span> <span class=\"string\">$&#123;&#x27;0</span> <span class=\"string\">error&#x27;&#125;`;</span></span><br></pre></td></tr></table></figure>\n<!--hexo-->\n\n<h1 id=\"unitTest\"><a href=\"#unitTest\" class=\"headerlink\" title=\"unitTest\"></a>unitTest</h1><p>和eslint的配置大同小异，只是改了对检测结果的判断。唯一的区别是jest的检测结果是输出到stderr，见<a href=\"https://github.com/jestjs/jest/issues/5064%E3%80%82\">https://github.com/jestjs/jest/issues/5064。</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">unitTest:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">outputs:</span></span><br><span class=\"line\">            <span class=\"attr\">result:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.lint.outputs.result</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                  pnpm remove @nike/eslint-multi-formatter || true</span></span><br><span class=\"line\"><span class=\"string\">                  pnpm remove @nike/svg-packer || true</span></span><br><span class=\"line\"><span class=\"string\">                  pnpm install</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/github-script@v7</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">result-encoding:</span> <span class=\"string\">string</span></span><br><span class=\"line\">                  <span class=\"attr\">script:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      let output = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let outerr = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">await</span> <span class=\"string\">exec.exec(</span></span><br><span class=\"line\">                        <span class=\"string\">`pnpm</span> <span class=\"string\">run</span> <span class=\"string\">test`,</span></span><br><span class=\"line\">                        []<span class=\"string\">,</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">silent:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">ignoreReturnCode:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">listeners:</span> &#123;</span><br><span class=\"line\">                            <span class=\"attr\">stdout:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">output</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                            <span class=\"attr\">stderr:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">outerr</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                          &#125;,</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      <span class=\"string\">);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">//</span> <span class=\"string\">why</span> <span class=\"string\">use</span> <span class=\"string\">outerr?</span> <span class=\"string\">https://github.com/jestjs/jest/issues/5064</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">failMatch</span> <span class=\"string\">=</span> <span class=\"string\">outerr.match(/Test</span> <span class=\"attr\">Suites:</span> <span class=\"string\">\\d+</span> <span class=\"string\">failed/);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(failMatch)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">$</span>&#123;<span class=\"string\">failMatch?.</span>[<span class=\"number\">0</span>]&#125;<span class=\"string\">`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">errorMatch</span> <span class=\"string\">=</span> <span class=\"string\">outerr.match(/Jest:</span> <span class=\"string\">&quot;global&quot;</span> <span class=\"string\">coverage</span> <span class=\"string\">threshold</span> <span class=\"string\">for</span> <span class=\"string\">lines</span> <span class=\"string\">\\([0-9\\.]+%\\)</span> <span class=\"attr\">not met:</span> [<span class=\"number\">0</span><span class=\"number\">-9</span><span class=\"string\">\\.</span>]<span class=\"string\">+%/);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(errorMatch)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">$</span>&#123;<span class=\"string\">errorMatch?.</span>[<span class=\"number\">0</span>]&#125;<span class=\"string\">`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">return</span> <span class=\"string\">`:white_check_mark:</span> <span class=\"string\">passed`;</span></span><br></pre></td></tr></table></figure>\n<!--hexo-->\n\n<h1 id=\"replyResult\"><a href=\"#replyResult\" class=\"headerlink\" title=\"replyResult\"></a>replyResult</h1><p>最后，将几个检测的结果进行汇总，回复到pr里就行了。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">replyResult:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">replyChecking</span>, <span class=\"string\">eslint</span>, <span class=\"string\">typescript</span>, <span class=\"string\">unitTest</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Get</span> <span class=\"string\">date</span> <span class=\"string\">time</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">getDateTime</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;result=$(TZ=Asia/Shanghai date)&quot;</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">&quot;$GITHUB_OUTPUT&quot;</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Create</span> <span class=\"string\">or</span> <span class=\"string\">update</span> <span class=\"string\">a</span> <span class=\"string\">comment</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">./.github/actions/unique-comment</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">uniqueIdentifier:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.workflow</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">                  <span class=\"attr\">body:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      ## Eslint Check Result</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">$&#123;&#123;needs.eslint.outputs.result&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"comment\">## Typescript Check Result</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">$&#123;&#123;needs.typescript.outputs.result&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"comment\">## UnitTest Check Result</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">$&#123;&#123;needs.unitTest.outputs.result&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">Commented</span> <span class=\"string\">by</span> <span class=\"string\">Action</span> [<span class=\"string\">$<span class=\"template-variable\">&#123;&#123;github.workflow&#125;&#125;</span></span>]<span class=\"string\">($&#123;&#123;github.event.repository.html_url&#125;&#125;/actions/runs/$&#123;&#123;github.run_id&#125;&#125;),</span> <span class=\"string\">last</span> <span class=\"string\">updated</span> <span class=\"string\">on</span> <span class=\"string\">$&#123;&#123;steps.getDateTime.outputs.result&#125;&#125;.</span></span><br></pre></td></tr></table></figure>\n\n<p>和replyChecking差不多，在body里使用<code>$&#123;&#123;needs.eslint.outputs.result&#125;&#125;</code>去读取了eslint job的outputs。</p>\n<h2 id=\"测试-3\"><a href=\"#测试-3\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>去发起新的pr，故意提交一个有eslint error的js&#x2F;ts文件，看看表现吧~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>原文链接：<a href=\"https://github.com/taoliujun/blog/issues/36\">https://github.com/taoliujun/blog/issues/36</a></p>\n<!--hexo\n---\nurl: github-actions-sample-eslint-in-pull-request\ntags:\n  - github actions\n---\n-->\n\n<p>一个在pull request发起的时候执行eslint检测的workflow，<a href=\"https://github.com/taoliujun/npm-packages/blob/master/.github/workflows/check-pull-request.yml\">点此查看完整代码</a>，它实现的功能如下：</p>\n<ul>\n<li>在pull request创建、更新的时候执行。</li>\n<li>先回复一个评论，告诉用户正在运行。</li>\n<li>初始化仓库，并安装依赖，产生依赖缓存。</li>\n<li>运行eslint增量检查。</li>\n<li>运行typescript检查。</li>\n<li>运行jest检查。</li>\n<li>更新之前的评论，回复检查的结果。</li>\n</ul>\n<p>运行截图：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e\" alt=\"Alt text\"></p>\n<p>为避免歧义，涉及到github action的术语都是英文的。术语介绍如下：</p>\n<ul>\n<li>workflow，工作流，可以理解为yml文件。</li>\n<li>jobs，工作，一个workflow可以包含多个job，并行执行。</li>\n<li>steps，作业，一个job可以包含多个step，串行执行。</li>\n<li>action，操作，作业中具体的执行。</li>\n</ul>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ul>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871790603\">初始化workflow</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871806576\">reply checking</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871818126\">.&#x2F;.github&#x2F;actions&#x2F;unique-comment</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871862632\">init</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871862779\">eslint</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871862850\">typescript</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871863037\">unit test</a></li>\n<li><a href=\"https://github.com/taoliujun/blog/issues/36#issuecomment-1871863117\">reply result</a></li>\n</ul>\n<!--hexo-->\n\n<h1 id=\"初始化workflow\"><a href=\"#初始化workflow\" class=\"headerlink\" title=\"初始化workflow\"></a>初始化workflow</h1><p>在项目中新建文件<code>.github/workflows/check-pull-request.yml</code>，内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">test</span> <span class=\"string\">check</span> <span class=\"string\">pull</span> <span class=\"string\">request</span></span><br><span class=\"line\"><span class=\"attr\">run-name:</span> <span class=\"string\">&#x27;check pull request #$<span class=\"template-variable\">&#123;&#123; github.event.pull_request.number &#125;&#125;</span>&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">        <span class=\"attr\">types:</span> [<span class=\"string\">opened</span>, <span class=\"string\">synchronize</span>, <span class=\"string\">reopened</span>]</span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">    <span class=\"attr\">replyChecking:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;replyChecking&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">init:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;init&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">eslint:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;eslint&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">typescript:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;typescript&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">unitTest:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;unitTest&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">replyResult:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">replyChecking</span>, <span class=\"string\">eslint</span>, <span class=\"string\">typescript</span>, <span class=\"string\">unitTest</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;replyResult&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"name和run-name\"><a href=\"#name和run-name\" class=\"headerlink\" title=\"name和run-name\"></a>name和run-name</h2><p>给workflow命名为<code>check pull request</code>，它会出现在Actions页面的左侧菜单中。运行实例名为<code>check pull request #44</code>，出现在右侧的运行列表中。如图：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/c1371ff2-8fc3-4e5b-8b60-3c572419938b\"></p>\n<p><code>run-name</code>中的<code>$&#123;&#123; github.event.pull_request.number &#125;&#125;</code>是workflow的上下文，这里读取了上下文中的pr编号。</p>\n<h2 id=\"on\"><a href=\"#on\" class=\"headerlink\" title=\"on\"></a>on</h2><p><code>on</code>指定了workflow的触发条件，这里配置了在pr创建、同步、重新打开的时候，触发该workflow。</p>\n<h2 id=\"jobs\"><a href=\"#jobs\" class=\"headerlink\" title=\"jobs\"></a>jobs</h2><p>按照设想，需要定义几个job，分别是：</p>\n<ul>\n<li>replyChecking：回复用户正在检查中</li>\n<li>init：初始化仓库，缓存依赖项</li>\n<li>eslint：运行eslint检查</li>\n<li>typescript：运行typescript检查</li>\n<li>unitTest：运行单元测试</li>\n<li>replyResult：回复用户检查结果</li>\n</ul>\n<p><code>jobs</code>是并行运行的，聪明如你肯定发现了，eslint、typescript、unitTest这三个job会涉及到安装npm依赖，所以它们最好在init后执行，确保依赖已经缓存了。</p>\n<p>其次，replyResult肯定要拿到eslint等job的结果才能执行，所以使用了<code>needs</code>管理它们的执行依赖关系。</p>\n<h3 id=\"runs-on\"><a href=\"#runs-on\" class=\"headerlink\" title=\"runs-on\"></a>runs-on</h3><p>每个job都运行在独立的容器中，github官方提供了windows、macos、linux多种容器，这里使用了ubuntu容器。</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>发起一个pr，看到Actions页面出现了新的运行实例，点击进去，可以看到各个job的运行情况和依赖关系：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/09c86bc1-ada1-41c3-9f8f-7e6c46f8204e\"></p>\n<!--hexo-->\n\n<h1 id=\"replyChecking\"><a href=\"#replyChecking\" class=\"headerlink\" title=\"replyChecking\"></a>replyChecking</h1><p>在进行eslint检测之前，先在pr里回复<code>checking</code>，并且带上拽酷炫的话。将replyChecking改成如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">replyChecking:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">          <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">          <span class=\"attr\">with:</span></span><br><span class=\"line\">              <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Get</span> <span class=\"string\">date</span> <span class=\"string\">time</span></span><br><span class=\"line\">          <span class=\"attr\">id:</span> <span class=\"string\">getDateTime</span></span><br><span class=\"line\">          <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;result=$(TZ=Asia/Shanghai date)&quot;</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">&quot;$GITHUB_OUTPUT&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Create</span> <span class=\"string\">or</span> <span class=\"string\">update</span> <span class=\"string\">a</span> <span class=\"string\">comment</span></span><br><span class=\"line\">          <span class=\"attr\">uses:</span> <span class=\"string\">./.github/actions/unique-comment</span></span><br><span class=\"line\">          <span class=\"attr\">with:</span></span><br><span class=\"line\">              <span class=\"attr\">uniqueIdentifier:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.workflow</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">              <span class=\"attr\">body:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                  **Checking...**</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                  <span class=\"string\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"string\">Commented</span> <span class=\"string\">by</span> <span class=\"string\">Action</span> [<span class=\"string\">$<span class=\"template-variable\">&#123;&#123;github.workflow&#125;&#125;</span></span>]<span class=\"string\">($&#123;&#123;github.event.repository.html_url&#125;&#125;/actions/runs/$&#123;&#123;github.run_id&#125;&#125;),</span> <span class=\"string\">last</span> <span class=\"string\">updated</span> <span class=\"string\">on</span> <span class=\"string\">$&#123;&#123;steps.getDateTime.outputs.result&#125;&#125;.</span></span><br></pre></td></tr></table></figure>\n\n<p><code>steps</code>每一步里<code>name</code>、<code>id</code>是可选的，<code>name</code>在Actions详情页面里会显示，更直观的看到step的名称，推荐写上。</p>\n<h2 id=\"Checkout\"><a href=\"#Checkout\" class=\"headerlink\" title=\"Checkout\"></a>Checkout</h2><p><code>uses</code>表示使用一个action，名为<code>actions/checkout@v4</code>，它用来拉取仓库。</p>\n<blockquote>\n<p>同其他编程语言一样，重复的action可以封装起来。<a href=\"https://github.com/marketplace?type=actions\">action市场</a>提供了很多。</p>\n</blockquote>\n<p><code>with</code>属性指定了该action的输入参数，每个action的参数不尽相同。</p>\n<p><code>ref</code>参数表示要拉取的分支，<code>$&#123;&#123;github.head_ref&#125;&#125;</code>也是一个上下文，表示当前pr的源分支。</p>\n<h2 id=\"Get-Date-time\"><a href=\"#Get-Date-time\" class=\"headerlink\" title=\"Get Date time\"></a>Get Date time</h2><p>这step还写了<code>id</code>，表示该step在该job中的唯一标识，为什么要写呢？是为了下一步step能根据<code>id</code>读取到它的<code>output</code>。</p>\n<blockquote>\n<p><strong>output</strong>是workflow中非常重要的概念，它用于在step之间、job之间分享简单的数据。</p>\n</blockquote>\n<p><code>run</code>就是在容器中跑一个命令，这里跑了一个unix bash命令，将当前时间写入到<code>$GITHUB_OUTPUT</code>中，键名为<code>result</code>。</p>\n<blockquote>\n<p><code>$GITHUB_OUTPUT</code>是workflow注入到容器中的一个路径，用于存放output。</p>\n</blockquote>\n<h2 id=\"Create-or-update-a-comment\"><a href=\"#Create-or-update-a-comment\" class=\"headerlink\" title=\"Create or update a comment\"></a>Create or update a comment</h2><p><code>uses</code>使用了本地的action，这个action用于创建或更新一个唯一回复，下一节说。</p>\n<blockquote>\n<p>有时候，官方或市场的action并不能满足你的需要，就得自己写一个了。</p>\n</blockquote>\n<p>同理，该action也有<code>with</code>属性，<code>uniqueIdentifier</code>是回复评论的唯一标识，<code>body</code>是回复的内容，内容使用了markdown语法，里面还涉及到上下文不一一细讲了。只说<code>$&#123;&#123;steps.getDateTime.outputs.result&#125;&#125;</code>这个上下文表示获取getDateTime这个step中，键名为<code>result</code>的值。</p>\n<p>如果你不需要在内容里插入时间，那么上面的<code>Get Date time</code>就可以省略了。</p>\n<h2 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>因为我已经有完整的代码了，所以运行后，pr中会有一个回复，如图：</p>\n<p><img src=\"https://github.com/taoliujun/blog/assets/5689134/42396a84-b798-4f4e-9f39-5bf92a8acb15\"></p>\n<!--hexo-->\n\n<h1 id=\"x2F-github-x2F-actions-x2F-unique-comment\"><a href=\"#x2F-github-x2F-actions-x2F-unique-comment\" class=\"headerlink\" title=\".&#x2F;.github&#x2F;actions&#x2F;unique-comment\"></a>.&#x2F;.github&#x2F;actions&#x2F;unique-comment</h1><p>这是一个封装的javascript action，用于对issue创建、更新唯一评论。</p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><p>创建目录<code>./.github/actions/unique-comment</code>，最终目录结构如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── action.yml</span><br><span class=\"line\">├── config</span><br><span class=\"line\">│   └── webpack.config.js</span><br><span class=\"line\">├── dist</span><br><span class=\"line\">│   ├── index.js</span><br><span class=\"line\">│   └── index.js.LICENSE.txt</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">└── src</span><br><span class=\"line\">    └── index.js</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"action-yml\"><a href=\"#action-yml\" class=\"headerlink\" title=\"action.yml\"></a>action.yml</h2><p>这是action的配置文件，必须存在，内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">unique-comment</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">create</span> <span class=\"string\">or</span> <span class=\"string\">update</span> <span class=\"string\">a</span> <span class=\"string\">unique</span> <span class=\"string\">comment</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">runs:</span></span><br><span class=\"line\">    <span class=\"attr\">using:</span> <span class=\"string\">&#x27;node20&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">main:</span> <span class=\"string\">&#x27;./dist/index.js&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">inputs:</span></span><br><span class=\"line\">    <span class=\"attr\">token:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;GitHub token&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.token</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">owner:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Repository owner&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.event.repository.owner.login</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Repository name&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.event.repository.name</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">issue_number:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Issue number&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.event.number</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">body:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Comment body&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">uniqueIdentifier:</span></span><br><span class=\"line\">        <span class=\"attr\">description:</span> <span class=\"string\">&#x27;Unique identifier for comment&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">required:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"attr\">default:</span> <span class=\"string\">&#x27;unique-comment&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>大部分属性不一一细讲了，都是简单的英文望文生义即可。</p>\n<p><code>runs</code>表示运行在<code>node20</code>环境下，入口文件为<code>./dist/index.js</code>。</p>\n<p><code>inputs</code>表示接受的参数，也就是之前提到的<code>with</code>属性里要输入的参数。用<code>required</code>表示是否必须传入，<code>default</code>表示默认值。</p>\n<h2 id=\"src-x2F-index-js\"><a href=\"#src-x2F-index-js\" class=\"headerlink\" title=\"src&#x2F;index.js\"></a>src&#x2F;index.js</h2><p>为什么入口文件是<code>dist/index.js</code>，而不是<code>src/index.js</code>呢？因为要引用一些github官方提供的快捷操作github REST API的js包去操作issue评论(pull request也是一种issue)，最终打包后的文件才能在工作流中稳妥的运行。所以，写好<code>src/index.js</code>，再打包就行。</p>\n<p>该文件代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> core = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@actions/core&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> github = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@actions/github&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">main</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;token&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> owner = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;owner&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repo = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;repo&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> issueNumber = core.<span class=\"title function_\">getInput</span>(<span class=\"string\">&#x27;issue_number&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> uniqueIdentifier = <span class=\"string\">`[^uniqueIdentifier]: <span class=\"subst\">$&#123;core.getInput(<span class=\"string\">&#x27;uniqueIdentifier&#x27;</span>)&#125;</span>`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> body = <span class=\"string\">`<span class=\"subst\">$&#123;core.getInput(<span class=\"string\">&#x27;body&#x27;</span>)&#125;</span>\\n\\n<span class=\"subst\">$&#123;uniqueIdentifier&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    core.<span class=\"title function_\">debug</span>(<span class=\"string\">`uniqueIdentifier is <span class=\"subst\">$&#123;uniqueIdentifier&#125;</span>`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> octokit = github.<span class=\"title function_\">getOctokit</span>(token);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> comments = <span class=\"keyword\">await</span> octokit.<span class=\"property\">rest</span>.<span class=\"property\">issues</span>.<span class=\"title function_\">listComments</span>(&#123;</span><br><span class=\"line\">        owner,</span><br><span class=\"line\">        repo,</span><br><span class=\"line\">        <span class=\"attr\">issue_number</span>: issueNumber,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> botComment = comments.<span class=\"property\">data</span>.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> v.<span class=\"property\">body</span>.<span class=\"title function_\">includes</span>(uniqueIdentifier));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (botComment) &#123;</span><br><span class=\"line\">        core.<span class=\"title function_\">info</span>(<span class=\"string\">&#x27;update comment successfully.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">await</span> octokit.<span class=\"property\">rest</span>.<span class=\"property\">issues</span>.<span class=\"title function_\">updateComment</span>(&#123;</span><br><span class=\"line\">            owner,</span><br><span class=\"line\">            repo,</span><br><span class=\"line\">            <span class=\"attr\">comment_id</span>: botComment.<span class=\"property\">id</span>,</span><br><span class=\"line\">            body,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        core.<span class=\"title function_\">info</span>(<span class=\"string\">&#x27;create comment successfully.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">await</span> octokit.<span class=\"property\">rest</span>.<span class=\"property\">issues</span>.<span class=\"title function_\">createComment</span>(&#123;</span><br><span class=\"line\">            owner,</span><br><span class=\"line\">            repo,</span><br><span class=\"line\">            <span class=\"attr\">issue_number</span>: issueNumber,</span><br><span class=\"line\">            body,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">main</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    core.<span class=\"title function_\">setFailed</span>(err.<span class=\"property\">message</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>@actions/core</code>和<code>@actions/github</code>是github官方提供的js包，前者可以方便的读取入参等，后者可以方便的操作github REST API。</p>\n<p><code>main</code>函数的代码就是原生javascript，不一一解释了，主要通过<code>uniqueIdentifier</code>来判断是否发布过评论，如果是，就更新评论，否则就创建评论。</p>\n<blockquote>\n<p>markdown语法<code>[^uniqueIdentifier]</code>表示脚注，不会被渲染。</p>\n</blockquote>\n<p><code>core.setFailed(err.message);</code>表示抛出退出代码。</p>\n<h2 id=\"config-x2F-webpack-config-js\"><a href=\"#config-x2F-webpack-config-js\" class=\"headerlink\" title=\"config&#x2F;webpack.config.js\"></a>config&#x2F;webpack.config.js</h2><p>打包用的，配置简单可用即可：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">target</span>: <span class=\"string\">&#x27;node20&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">clean</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;unique-comment&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;1.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;private&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack --config ./config/webpack.config.js&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;@actions/core&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^1.10.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;@actions/github&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^6.0.0&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;devDependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;webpack&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^5.89.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;webpack-cli&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^5.1.4&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>没啥好说的，列出了依赖项。和一个打包脚本。</p>\n<h2 id=\"测试-2\"><a href=\"#测试-2\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>修改了<code>src/index.js</code>得<code>build</code>，然后push到github仓库。</p>\n<p>记得将<strong>dist</strong>目录也提交到github仓库。</p>\n<!--hexo-->\n\n<h1 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h1><p>现在，开始搞正经的了。</p>\n<p>先初始化项目，这个job的目的仅仅是为了缓存pnpm依赖项，如果你的项目的依赖项不经常更新，可以省略这个job，后续也不要<code>needs</code>这个job。</p>\n<p>将init改成如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">init:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">pnpm</span> <span class=\"string\">install</span></span><br></pre></td></tr></table></figure>\n\n<p>相信经过对之前的job的了解，这里的配置就看起来很简单了。</p>\n<h2 id=\"Init-pnpm\"><a href=\"#Init-pnpm\" class=\"headerlink\" title=\"Init pnpm\"></a>Init pnpm</h2><p>使用第三方action，安装pnpm@^8。</p>\n<h2 id=\"Init-node\"><a href=\"#Init-node\" class=\"headerlink\" title=\"Init node\"></a>Init node</h2><p><code>cache: &#39;pnpm&#39;</code>指定缓存机制，它内部是利用了workflow的cache机制。</p>\n<h2 id=\"Install-dependencies\"><a href=\"#Install-dependencies\" class=\"headerlink\" title=\"Install dependencies\"></a>Install dependencies</h2><p>安装依赖项，触发缓存。</p>\n<!--hexo-->\n\n<h1 id=\"eslint\"><a href=\"#eslint\" class=\"headerlink\" title=\"eslint\"></a>eslint</h1><p>将eslint改成如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eslint:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">outputs:</span></span><br><span class=\"line\">            <span class=\"attr\">result:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.lint.outputs.result</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\">                  <span class=\"attr\">fetch-depth:</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">pnpm</span> <span class=\"string\">install</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">eslint</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/github-script@v7</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">result-encoding:</span> <span class=\"string\">string</span></span><br><span class=\"line\">                  <span class=\"attr\">script:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      let output = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let outerr = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let diffFiles = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">await</span> <span class=\"string\">exec.exec(</span></span><br><span class=\"line\">                        <span class=\"string\">`git</span> <span class=\"string\">diff</span> <span class=\"string\">--name-only</span> <span class=\"string\">origin/$&#123;&#123;github.base_ref&#125;&#125;`,</span></span><br><span class=\"line\">                        []<span class=\"string\">,</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">silent:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">ignoreReturnCode:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">listeners:</span> &#123;</span><br><span class=\"line\">                            <span class=\"attr\">stdout:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">diffFiles</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                          &#125;,</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      <span class=\"string\">);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">lintFiles</span> <span class=\"string\">=</span> <span class=\"string\">diffFiles.split(`\\n`).filter((file)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">file.endsWith(&#x27;.js&#x27;)</span> <span class=\"string\">||</span> <span class=\"string\">file.endsWith(&#x27;.ts&#x27;)</span> <span class=\"string\">||</span> <span class=\"string\">file.endsWith(&#x27;.tsx&#x27;)</span></span><br><span class=\"line\">                      &#125;<span class=\"string\">).join(&#x27;</span> <span class=\"string\">&#x27;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      await exec.exec(</span></span><br><span class=\"line\"><span class=\"string\">                        // &quot;pnpm run lint --format stylish&quot;,</span></span><br><span class=\"line\"><span class=\"string\">                        `pnpm eslint $&#123;lintFiles&#125;`,</span></span><br><span class=\"line\"><span class=\"string\">                        [],</span></span><br><span class=\"line\"><span class=\"string\">                        &#123;</span></span><br><span class=\"line\"><span class=\"string\">                          // silent: true,</span></span><br><span class=\"line\"><span class=\"string\">                          ignoreReturnCode: true,</span></span><br><span class=\"line\"><span class=\"string\">                          listeners: &#123;</span></span><br><span class=\"line\"><span class=\"string\">                            stdout: (data) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">                                output += data.toString();</span></span><br><span class=\"line\"><span class=\"string\">                            &#125;,</span></span><br><span class=\"line\"><span class=\"string\">                            stderr: (data) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">                                outerr += data.toString();</span></span><br><span class=\"line\"><span class=\"string\">                            &#125;,</span></span><br><span class=\"line\"><span class=\"string\">                          &#125;,</span></span><br><span class=\"line\"><span class=\"string\">                        &#125;</span></span><br><span class=\"line\"><span class=\"string\">                      );</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      if (outerr) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                        return `:x: Some command execution errors, non-eslint business errors.`;</span></span><br><span class=\"line\"><span class=\"string\">                      &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      const errorMatch = output.match(/(\\d+) errors?/);</span></span><br><span class=\"line\"><span class=\"string\">                      const warnMatch = output.match(/(\\d+) warnings?/);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      if (errorMatch &amp;&amp; errorMatch?.[1] !== &#x27;</span><span class=\"number\">0</span><span class=\"string\">&#x27;) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                        return `:x: $&#123;errorMatch?.[0]&#125; $&#123;warnMatch?.[0]&#125;`;</span></span><br><span class=\"line\"><span class=\"string\">                      &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                      return `:white_check_mark: $&#123;errorMatch?.[0] || &#x27;</span><span class=\"number\">0</span> <span class=\"string\">error&#x27;&#125;</span> <span class=\"string\">$&#123;warnMatch?.[0]</span> <span class=\"string\">||</span> <span class=\"string\">&#x27;0 warning&#x27;</span><span class=\"string\">&#125;`;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"needs\"><a href=\"#needs\" class=\"headerlink\" title=\"needs\"></a>needs</h2><p>使用<code>needs</code>依赖init，可以使用到pnpm的缓存项，防止install太慢。</p>\n<blockquote>\n<p>因为eslint、typescript、unitTest都需要pnpm install，所以一个前置的init去缓存pnpm依赖项，可以加快后续的install速度。</p>\n</blockquote>\n<h2 id=\"outputs\"><a href=\"#outputs\" class=\"headerlink\" title=\"outputs\"></a>outputs</h2><p>job里的outputs，可以在依赖它的其他job中访问到。这里使用<code>$&#123;&#123; steps.lint.outputs.result &#125;&#125;</code>去获取该job中lint这个step里的output里的result。</p>\n<blockquote>\n<p>output有job和step两个维度，注意区分。</p>\n</blockquote>\n<h2 id=\"Run-eslint\"><a href=\"#Run-eslint\" class=\"headerlink\" title=\"Run eslint\"></a>Run eslint</h2><p>它uses了<code>actions/github-script@v7</code>，这是github官方提供的一个action，可以在<code>with.script</code>里写js代码去执行，同时它会注入一些变量到script中去，见它的<a href=\"https://github.com/actions/github-script/tree/v7/\">官方文档</a>。</p>\n<blockquote>\n<p>对于简单的js代码，可以使用这个action去完成，不用再去写一个js文件。</p>\n</blockquote>\n<p><code>result-encoding</code>是指定script返回的数据格式的，默认是json，这指定为string。</p>\n<blockquote>\n<p>为什么script里return了string，还要指定为string呢？<br>因为<code>return &#39;hello&#39;</code>在json encode后是<code>&#39;&quot;hello&quot;&#39;</code>，而string encode后为<code>&#39;hello&#39;</code>。</p>\n</blockquote>\n<p>script里是原生的js代码了，里面的<code>exec</code>是该action注入的变量，用来执行shell命令。</p>\n<p>这段js代码做了两个事情，一是<code>git diff</code>获取pr中改动的文件列表，二是<code>eslint</code>检查这些增量文件，最后返回处理的结果。</p>\n<h2 id=\"fetch-depth\"><a href=\"#fetch-depth\" class=\"headerlink\" title=\"fetch-depth\"></a>fetch-depth</h2><p>Init repo这个step里设置了<code>fetch-depth: 0</code>，不然获取不到完整的git分支，具体看<code>actions/checkout</code>的解释，涉及到git的知识不展开细说了。</p>\n<h2 id=\"steps-lint-outputs-result\"><a href=\"#steps-lint-outputs-result\" class=\"headerlink\" title=\"steps.lint.outputs.result\"></a>steps.lint.outputs.result</h2><p><code>steps.lint.outputs.result</code>为什么能拿到lint step里的output.result呢？因为<code>actions/github-script</code>这个action内部将script的返回值，设置到<code>$GITHUB_OUTPUT</code>里了，且键名为<code>result</code>。</p>\n<!--hexo-->\n\n<h1 id=\"typescript\"><a href=\"#typescript\" class=\"headerlink\" title=\"typescript\"></a>typescript</h1><p>和eslint的配置大同小异，只是改了对检测结果的判断。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">typescript:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">outputs:</span></span><br><span class=\"line\">            <span class=\"attr\">result:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.lint.outputs.result</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">pnpm</span> <span class=\"string\">install</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/github-script@v7</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">result-encoding:</span> <span class=\"string\">string</span></span><br><span class=\"line\">                  <span class=\"attr\">script:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      let output = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let outerr = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">await</span> <span class=\"string\">exec.exec(</span></span><br><span class=\"line\">                        <span class=\"string\">`pnpm</span> <span class=\"string\">run</span> <span class=\"string\">-r</span> <span class=\"string\">lint:ts`,</span></span><br><span class=\"line\">                        []<span class=\"string\">,</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">silent:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">ignoreReturnCode:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">listeners:</span> &#123;</span><br><span class=\"line\">                            <span class=\"attr\">stdout:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">output</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                            <span class=\"attr\">stderr:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">outerr</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                          &#125;,</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      <span class=\"string\">);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(outerr)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">Some</span> <span class=\"string\">command</span> <span class=\"string\">execution</span> <span class=\"string\">errors</span>, <span class=\"literal\">no</span> <span class=\"string\">business</span> <span class=\"string\">errors.`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">errorMatch</span> <span class=\"string\">=</span> <span class=\"string\">output.match(/error</span> <span class=\"string\">TS/g);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(errorMatch)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">$</span>&#123;<span class=\"string\">errorMatch?.length</span>&#125; <span class=\"string\">errors`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">return</span> <span class=\"string\">`:white_check_mark:</span> <span class=\"string\">$&#123;&#x27;0</span> <span class=\"string\">error&#x27;&#125;`;</span></span><br></pre></td></tr></table></figure>\n<!--hexo-->\n\n<h1 id=\"unitTest\"><a href=\"#unitTest\" class=\"headerlink\" title=\"unitTest\"></a>unitTest</h1><p>和eslint的配置大同小异，只是改了对检测结果的判断。唯一的区别是jest的检测结果是输出到stderr，见<a href=\"https://github.com/jestjs/jest/issues/5064%E3%80%82\">https://github.com/jestjs/jest/issues/5064。</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">unitTest:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">init</span>]</span><br><span class=\"line\">        <span class=\"attr\">outputs:</span></span><br><span class=\"line\">            <span class=\"attr\">result:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.lint.outputs.result</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">repo</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">pnpm</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">pnpm/action-setup@v2</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">version:</span> <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Init</span> <span class=\"string\">node</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">node-version:</span> <span class=\"number\">20</span></span><br><span class=\"line\">                  <span class=\"attr\">cache:</span> <span class=\"string\">&#x27;pnpm&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                  pnpm remove @nike/eslint-multi-formatter || true</span></span><br><span class=\"line\"><span class=\"string\">                  pnpm remove @nike/svg-packer || true</span></span><br><span class=\"line\"><span class=\"string\">                  pnpm install</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">lint</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/github-script@v7</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">result-encoding:</span> <span class=\"string\">string</span></span><br><span class=\"line\">                  <span class=\"attr\">script:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      let output = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">                      let outerr = &#x27;&#x27;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">await</span> <span class=\"string\">exec.exec(</span></span><br><span class=\"line\">                        <span class=\"string\">`pnpm</span> <span class=\"string\">run</span> <span class=\"string\">test`,</span></span><br><span class=\"line\">                        []<span class=\"string\">,</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                          <span class=\"string\">//</span> <span class=\"attr\">silent:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">ignoreReturnCode:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\">                          <span class=\"attr\">listeners:</span> &#123;</span><br><span class=\"line\">                            <span class=\"attr\">stdout:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">output</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                            <span class=\"attr\">stderr:</span> <span class=\"string\">(data)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">                                <span class=\"string\">outerr</span> <span class=\"string\">+=</span> <span class=\"string\">data.toString();</span></span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                          &#125;,</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      <span class=\"string\">);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">//</span> <span class=\"string\">why</span> <span class=\"string\">use</span> <span class=\"string\">outerr?</span> <span class=\"string\">https://github.com/jestjs/jest/issues/5064</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">failMatch</span> <span class=\"string\">=</span> <span class=\"string\">outerr.match(/Test</span> <span class=\"attr\">Suites:</span> <span class=\"string\">\\d+</span> <span class=\"string\">failed/);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(failMatch)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">$</span>&#123;<span class=\"string\">failMatch?.</span>[<span class=\"number\">0</span>]&#125;<span class=\"string\">`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">const</span> <span class=\"string\">errorMatch</span> <span class=\"string\">=</span> <span class=\"string\">outerr.match(/Jest:</span> <span class=\"string\">&quot;global&quot;</span> <span class=\"string\">coverage</span> <span class=\"string\">threshold</span> <span class=\"string\">for</span> <span class=\"string\">lines</span> <span class=\"string\">\\([0-9\\.]+%\\)</span> <span class=\"attr\">not met:</span> [<span class=\"number\">0</span><span class=\"number\">-9</span><span class=\"string\">\\.</span>]<span class=\"string\">+%/);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">if</span> <span class=\"string\">(errorMatch)</span> &#123;</span><br><span class=\"line\">                        <span class=\"string\">return</span> <span class=\"string\">`:x:</span> <span class=\"string\">$</span>&#123;<span class=\"string\">errorMatch?.</span>[<span class=\"number\">0</span>]&#125;<span class=\"string\">`;</span></span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">return</span> <span class=\"string\">`:white_check_mark:</span> <span class=\"string\">passed`;</span></span><br></pre></td></tr></table></figure>\n<!--hexo-->\n\n<h1 id=\"replyResult\"><a href=\"#replyResult\" class=\"headerlink\" title=\"replyResult\"></a>replyResult</h1><p>最后，将几个检测的结果进行汇总，回复到pr里就行了。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">replyResult:</span></span><br><span class=\"line\">        <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">        <span class=\"attr\">needs:</span> [<span class=\"string\">replyChecking</span>, <span class=\"string\">eslint</span>, <span class=\"string\">typescript</span>, <span class=\"string\">unitTest</span>]</span><br><span class=\"line\">        <span class=\"attr\">steps:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;github.head_ref&#125;&#125;</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Get</span> <span class=\"string\">date</span> <span class=\"string\">time</span></span><br><span class=\"line\">              <span class=\"attr\">id:</span> <span class=\"string\">getDateTime</span></span><br><span class=\"line\">              <span class=\"attr\">run:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;result=$(TZ=Asia/Shanghai date)&quot;</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">&quot;$GITHUB_OUTPUT&quot;</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Create</span> <span class=\"string\">or</span> <span class=\"string\">update</span> <span class=\"string\">a</span> <span class=\"string\">comment</span></span><br><span class=\"line\">              <span class=\"attr\">uses:</span> <span class=\"string\">./.github/actions/unique-comment</span></span><br><span class=\"line\">              <span class=\"attr\">with:</span></span><br><span class=\"line\">                  <span class=\"attr\">uniqueIdentifier:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.workflow</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">                  <span class=\"attr\">body:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">                      ## Eslint Check Result</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">                      <span class=\"string\">$&#123;&#123;needs.eslint.outputs.result&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"comment\">## Typescript Check Result</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">$&#123;&#123;needs.typescript.outputs.result&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"comment\">## UnitTest Check Result</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">$&#123;&#123;needs.unitTest.outputs.result&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\">                      <span class=\"string\">Commented</span> <span class=\"string\">by</span> <span class=\"string\">Action</span> [<span class=\"string\">$<span class=\"template-variable\">&#123;&#123;github.workflow&#125;&#125;</span></span>]<span class=\"string\">($&#123;&#123;github.event.repository.html_url&#125;&#125;/actions/runs/$&#123;&#123;github.run_id&#125;&#125;),</span> <span class=\"string\">last</span> <span class=\"string\">updated</span> <span class=\"string\">on</span> <span class=\"string\">$&#123;&#123;steps.getDateTime.outputs.result&#125;&#125;.</span></span><br></pre></td></tr></table></figure>\n\n<p>和replyChecking差不多，在body里使用<code>$&#123;&#123;needs.eslint.outputs.result&#125;&#125;</code>去读取了eslint job的outputs。</p>\n<h2 id=\"测试-3\"><a href=\"#测试-3\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>去发起新的pr，故意提交一个有eslint error的js&#x2F;ts文件，看看表现吧~</p>\n"},{"title":"React公共状态利器 - Zustand","date":"2023-12-12T22:46:26.000Z","url":"react-zustand","_content":"\n\n原文链接：[https://github.com/taoliujun/blog/issues/35](https://github.com/taoliujun/blog/issues/35)\n\n<!--hexo\n---\nurl: react-zustand\ntags:\n  - zustand\n  - react store\n---\n-->\n\n官方文档：https://docs.pmnd.rs/zustand\n\n# 如何使用\n\n**Zustand** 是一个非常简单粗暴的全局状态管理库，它的使用有多简单呢？如下：\n\n```bash\n> pnpm add zustand\n```\n\n```ts\n// useFormStateStore.ts\nimport { create } from 'zustand';\n\ninterface State {\n    loading: boolean;\n    disabled: boolean;\n    setLoadingByAge: (value: number) => void;\n}\n\nexport const useFormStateStore = create<State>((set) => ({\n    loading: false,\n    disabled: false,\n    setLoadingByAge: (value) => {\n        set({ loading: value > 10 });\n    },\n}));\n```\n\n```tsx\n// app.tsx\nimport { useState, type FC } from 'react';\nimport { useFormStateStore } from './useFormStateStore';\nimport { Button } from '@/components/Button';\n\nconst Loading: FC = () => {\n    const { loading } = useFormStateStore();\n    return <div>loading: {String(loading)}</div>;\n};\n\nconst Disabled: FC = () => {\n    const { disabled } = useFormStateStore();\n    return <div>disabled: {String(disabled)}</div>;\n};\n\nconst Main: FC = () => {\n    const { setLoadingByAge } = useFormStateStore();\n    const [age, setAge] = useState(0);\n\n    return (\n        <div>\n            <Loading />\n            <br />\n            <Disabled />\n            <br />\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        loading: true,\n                    });\n                }}\n            >\n                set loading true\n            </Button>\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        loading: false,\n                    });\n                }}\n            >\n                set loading false\n            </Button>\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        disabled: true,\n                    });\n                }}\n            >\n                set disabled true\n            </Button>\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        disabled: false,\n                    });\n                }}\n            >\n                set disabled false\n            </Button>\n            <br />\n            <input\n                type=\"number\"\n                value={age}\n                onChange={(e) => {\n                    setAge(Number(e.target.value));\n                }}\n            />\n            <br />\n            <Button\n                onClick={() => {\n                    setLoadingByAge(age);\n                }}\n            >\n                set loading by age\n            </Button>\n        </div>\n    );\n};\n\nexport default Main;\n```\n\n在`useFormStateStore.ts`中定义了状态，然后在`app.tsx`中使用，就是这么简单粗暴！这里有几点介绍下：\n\n- 对于简单的状态更新，使用`setState`方法就可以，它的参数是一个对象，这个对象就是你要更新的状态，它会和之前的状态进行合并，然后返回一个新的状态，从而触发组件更新。\n\n- 对于需要通用的逻辑处理的状态更新，参照`useFormStateStore.ts`中的`setLoadingByAge`方法，将它作为状态里的一个方法就行了。\n\n# Zustand\n\n使用非常简单，API也很少，它的原理是使用了`Proxy`，所以它的性能非常好。\n\n# 相比Redux\n\n相比Redux，Zustand的代码非常简单明了，不需要使用`connect`、`mapStateToProps`、`mapDispatchToProps`这些方法。\n\n# 相比React Context\n\nReact Context需要一个`Provider`包裹组件以传递状态，需要一个`useContext`使用状态，光从层级上就让人绕起来了。而Zustand只需要一个`create`方法，就可以使用了，且状态是全局的，不需要传递。\n\n\n\n\n","source":"_posts/react-zustand.md","raw":"---\ntitle: \"React公共状态利器 - Zustand\"\ndate: \"2023-12-13T06:46:26Z\"\ncategories:\n  - [React]\n\nurl: react-zustand\ntags:\n  - zustand\n  - react store\n\n---\n\n\n原文链接：[https://github.com/taoliujun/blog/issues/35](https://github.com/taoliujun/blog/issues/35)\n\n<!--hexo\n---\nurl: react-zustand\ntags:\n  - zustand\n  - react store\n---\n-->\n\n官方文档：https://docs.pmnd.rs/zustand\n\n# 如何使用\n\n**Zustand** 是一个非常简单粗暴的全局状态管理库，它的使用有多简单呢？如下：\n\n```bash\n> pnpm add zustand\n```\n\n```ts\n// useFormStateStore.ts\nimport { create } from 'zustand';\n\ninterface State {\n    loading: boolean;\n    disabled: boolean;\n    setLoadingByAge: (value: number) => void;\n}\n\nexport const useFormStateStore = create<State>((set) => ({\n    loading: false,\n    disabled: false,\n    setLoadingByAge: (value) => {\n        set({ loading: value > 10 });\n    },\n}));\n```\n\n```tsx\n// app.tsx\nimport { useState, type FC } from 'react';\nimport { useFormStateStore } from './useFormStateStore';\nimport { Button } from '@/components/Button';\n\nconst Loading: FC = () => {\n    const { loading } = useFormStateStore();\n    return <div>loading: {String(loading)}</div>;\n};\n\nconst Disabled: FC = () => {\n    const { disabled } = useFormStateStore();\n    return <div>disabled: {String(disabled)}</div>;\n};\n\nconst Main: FC = () => {\n    const { setLoadingByAge } = useFormStateStore();\n    const [age, setAge] = useState(0);\n\n    return (\n        <div>\n            <Loading />\n            <br />\n            <Disabled />\n            <br />\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        loading: true,\n                    });\n                }}\n            >\n                set loading true\n            </Button>\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        loading: false,\n                    });\n                }}\n            >\n                set loading false\n            </Button>\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        disabled: true,\n                    });\n                }}\n            >\n                set disabled true\n            </Button>\n            <Button\n                onClick={() => {\n                    useFormStateStore.setState({\n                        disabled: false,\n                    });\n                }}\n            >\n                set disabled false\n            </Button>\n            <br />\n            <input\n                type=\"number\"\n                value={age}\n                onChange={(e) => {\n                    setAge(Number(e.target.value));\n                }}\n            />\n            <br />\n            <Button\n                onClick={() => {\n                    setLoadingByAge(age);\n                }}\n            >\n                set loading by age\n            </Button>\n        </div>\n    );\n};\n\nexport default Main;\n```\n\n在`useFormStateStore.ts`中定义了状态，然后在`app.tsx`中使用，就是这么简单粗暴！这里有几点介绍下：\n\n- 对于简单的状态更新，使用`setState`方法就可以，它的参数是一个对象，这个对象就是你要更新的状态，它会和之前的状态进行合并，然后返回一个新的状态，从而触发组件更新。\n\n- 对于需要通用的逻辑处理的状态更新，参照`useFormStateStore.ts`中的`setLoadingByAge`方法，将它作为状态里的一个方法就行了。\n\n# Zustand\n\n使用非常简单，API也很少，它的原理是使用了`Proxy`，所以它的性能非常好。\n\n# 相比Redux\n\n相比Redux，Zustand的代码非常简单明了，不需要使用`connect`、`mapStateToProps`、`mapDispatchToProps`这些方法。\n\n# 相比React Context\n\nReact Context需要一个`Provider`包裹组件以传递状态，需要一个`useContext`使用状态，光从层级上就让人绕起来了。而Zustand只需要一个`create`方法，就可以使用了，且状态是全局的，不需要传递。\n\n\n\n\n","slug":"react-zustand","published":1,"updated":"2024-01-03T09:13:36.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqxk9r640001joorghsabmh1","content":"<p>原文链接：<a href=\"https://github.com/taoliujun/blog/issues/35\">https://github.com/taoliujun/blog/issues/35</a></p>\n<!--hexo\n---\nurl: react-zustand\ntags:\n  - zustand\n  - react store\n---\n-->\n\n<p>官方文档：<a href=\"https://docs.pmnd.rs/zustand\">https://docs.pmnd.rs/zustand</a></p>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><p><strong>Zustand</strong> 是一个非常简单粗暴的全局状态管理库，它的使用有多简单呢？如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; pnpm add zustand</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// useFormStateStore.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; create &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;zustand&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">loading</span>: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">    <span class=\"attr\">disabled</span>: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">    <span class=\"attr\">setLoadingByAge</span>: <span class=\"function\">(<span class=\"params\">value: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useFormStateStore = create&lt;<span class=\"title class_\">State</span>&gt;(<span class=\"function\">(<span class=\"params\">set</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">loading</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">disabled</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">setLoadingByAge</span>: <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">set</span>(&#123; <span class=\"attr\">loading</span>: value &gt; <span class=\"number\">10</span> &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.tsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useState, <span class=\"keyword\">type</span> <span class=\"variable constant_\">FC</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useFormStateStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./useFormStateStore&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Button</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/Button&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Loading</span>: <span class=\"variable constant_\">FC</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; loading &#125; = <span class=\"title function_\">useFormStateStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>loading: &#123;String(loading)&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Disabled</span>: <span class=\"variable constant_\">FC</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; disabled &#125; = <span class=\"title function_\">useFormStateStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>disabled: &#123;String(disabled)&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Main</span>: <span class=\"variable constant_\">FC</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; setLoadingByAge &#125; = <span class=\"title function_\">useFormStateStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [age, setAge] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Loading</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Disabled</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        loading: true,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set loading true</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        loading: false,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set loading false</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        disabled: true,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set disabled true</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        disabled: false,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set disabled false</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">value</span>=<span class=\"string\">&#123;age&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;(e)</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    setAge(Number(e.target.value));</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    setLoadingByAge(age);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set loading by age</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Main</span>;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>useFormStateStore.ts</code>中定义了状态，然后在<code>app.tsx</code>中使用，就是这么简单粗暴！这里有几点介绍下：</p>\n<ul>\n<li><p>对于简单的状态更新，使用<code>setState</code>方法就可以，它的参数是一个对象，这个对象就是你要更新的状态，它会和之前的状态进行合并，然后返回一个新的状态，从而触发组件更新。</p>\n</li>\n<li><p>对于需要通用的逻辑处理的状态更新，参照<code>useFormStateStore.ts</code>中的<code>setLoadingByAge</code>方法，将它作为状态里的一个方法就行了。</p>\n</li>\n</ul>\n<h1 id=\"Zustand\"><a href=\"#Zustand\" class=\"headerlink\" title=\"Zustand\"></a>Zustand</h1><p>使用非常简单，API也很少，它的原理是使用了<code>Proxy</code>，所以它的性能非常好。</p>\n<h1 id=\"相比Redux\"><a href=\"#相比Redux\" class=\"headerlink\" title=\"相比Redux\"></a>相比Redux</h1><p>相比Redux，Zustand的代码非常简单明了，不需要使用<code>connect</code>、<code>mapStateToProps</code>、<code>mapDispatchToProps</code>这些方法。</p>\n<h1 id=\"相比React-Context\"><a href=\"#相比React-Context\" class=\"headerlink\" title=\"相比React Context\"></a>相比React Context</h1><p>React Context需要一个<code>Provider</code>包裹组件以传递状态，需要一个<code>useContext</code>使用状态，光从层级上就让人绕起来了。而Zustand只需要一个<code>create</code>方法，就可以使用了，且状态是全局的，不需要传递。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>原文链接：<a href=\"https://github.com/taoliujun/blog/issues/35\">https://github.com/taoliujun/blog/issues/35</a></p>\n<!--hexo\n---\nurl: react-zustand\ntags:\n  - zustand\n  - react store\n---\n-->\n\n<p>官方文档：<a href=\"https://docs.pmnd.rs/zustand\">https://docs.pmnd.rs/zustand</a></p>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><p><strong>Zustand</strong> 是一个非常简单粗暴的全局状态管理库，它的使用有多简单呢？如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; pnpm add zustand</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// useFormStateStore.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; create &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;zustand&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">loading</span>: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">    <span class=\"attr\">disabled</span>: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">    <span class=\"attr\">setLoadingByAge</span>: <span class=\"function\">(<span class=\"params\">value: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useFormStateStore = create&lt;<span class=\"title class_\">State</span>&gt;(<span class=\"function\">(<span class=\"params\">set</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">loading</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">disabled</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">setLoadingByAge</span>: <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">set</span>(&#123; <span class=\"attr\">loading</span>: value &gt; <span class=\"number\">10</span> &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.tsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useState, <span class=\"keyword\">type</span> <span class=\"variable constant_\">FC</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useFormStateStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./useFormStateStore&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Button</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/Button&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Loading</span>: <span class=\"variable constant_\">FC</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; loading &#125; = <span class=\"title function_\">useFormStateStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>loading: &#123;String(loading)&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Disabled</span>: <span class=\"variable constant_\">FC</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; disabled &#125; = <span class=\"title function_\">useFormStateStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>disabled: &#123;String(disabled)&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Main</span>: <span class=\"variable constant_\">FC</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; setLoadingByAge &#125; = <span class=\"title function_\">useFormStateStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [age, setAge] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Loading</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Disabled</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        loading: true,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set loading true</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        loading: false,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set loading false</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        disabled: true,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set disabled true</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    useFormStateStore.setState(&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                        disabled: false,</span></span><br><span class=\"line\"><span class=\"language-xml\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set disabled false</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">value</span>=<span class=\"string\">&#123;age&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;(e)</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    setAge(Number(e.target.value));</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                    setLoadingByAge(age);</span></span><br><span class=\"line\"><span class=\"language-xml\">                &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            &gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                set loading by age</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Main</span>;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>useFormStateStore.ts</code>中定义了状态，然后在<code>app.tsx</code>中使用，就是这么简单粗暴！这里有几点介绍下：</p>\n<ul>\n<li><p>对于简单的状态更新，使用<code>setState</code>方法就可以，它的参数是一个对象，这个对象就是你要更新的状态，它会和之前的状态进行合并，然后返回一个新的状态，从而触发组件更新。</p>\n</li>\n<li><p>对于需要通用的逻辑处理的状态更新，参照<code>useFormStateStore.ts</code>中的<code>setLoadingByAge</code>方法，将它作为状态里的一个方法就行了。</p>\n</li>\n</ul>\n<h1 id=\"Zustand\"><a href=\"#Zustand\" class=\"headerlink\" title=\"Zustand\"></a>Zustand</h1><p>使用非常简单，API也很少，它的原理是使用了<code>Proxy</code>，所以它的性能非常好。</p>\n<h1 id=\"相比Redux\"><a href=\"#相比Redux\" class=\"headerlink\" title=\"相比Redux\"></a>相比Redux</h1><p>相比Redux，Zustand的代码非常简单明了，不需要使用<code>connect</code>、<code>mapStateToProps</code>、<code>mapDispatchToProps</code>这些方法。</p>\n<h1 id=\"相比React-Context\"><a href=\"#相比React-Context\" class=\"headerlink\" title=\"相比React Context\"></a>相比React Context</h1><p>React Context需要一个<code>Provider</code>包裹组件以传递状态，需要一个<code>useContext</code>使用状态，光从层级上就让人绕起来了。而Zustand只需要一个<code>create</code>方法，就可以使用了，且状态是全局的，不需要传递。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clqxk9r600000joor84vf3yg8","category_id":"clqxk9r670003joorffjb03fe","_id":"clqxk9r690008joor4imo859j"},{"post_id":"clqxk9r640001joorghsabmh1","category_id":"clqxk9r680005joor13xp87sb","_id":"clqxk9r6a0009joor69azc42l"}],"PostTag":[{"post_id":"clqxk9r600000joor84vf3yg8","tag_id":"clqxk9r660002joorb3zc5fqo","_id":"clqxk9r690006joorhst22hj6"},{"post_id":"clqxk9r640001joorghsabmh1","tag_id":"clqxk9r680004joor9f4327js","_id":"clqxk9r6a000ajoorb4fqgt2j"},{"post_id":"clqxk9r640001joorghsabmh1","tag_id":"clqxk9r690007joor0mwh9cfx","_id":"clqxk9r6a000bjoor5eui8kh4"}],"Tag":[{"name":"github actions","_id":"clqxk9r660002joorb3zc5fqo"},{"name":"zustand","_id":"clqxk9r680004joor9f4327js"},{"name":"react store","_id":"clqxk9r690007joor0mwh9cfx"}]}}